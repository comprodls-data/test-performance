<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Enroll one or multiple users with particular Assigned Path"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enroll one or multiple users with particular Assigned Path_high">
          <stringProp name="HTTPSampler.domain">${host_url}</stringProp>
          <stringProp name="HTTPSampler.path">/lb-authextn/org/${orgid}/classes/${classid}/assigned-paths/${assignedpathid}/enroll-user/multi</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;users&quot;: [&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_51}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_52}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_53}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_54}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_55}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_56}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_57}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_58}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_59}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_60}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_61}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_62}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_63}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_64}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_65}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_66}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_67}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_68}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_69}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_70}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_71}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_72}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_73}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_74}&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;extUserId&quot;: &quot;${extuserid_75}&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.entities</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1449656927">201
206</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
