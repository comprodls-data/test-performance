<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Get list of all products for a user" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get list of all products for a user" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="details" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">details</stringProp>
              </elementProp>
              <elementProp name="bundleDetails" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">bundleDetails</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host_url}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/lb-product/${orgid}/users/${userid}/products</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname=" Extract productid" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">productid</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;uuid&quot;\:&quot;(.+?)&quot;,&quot;type&quot;:&quot;product&quot;,&quot;name&quot;:&quot;javascript_2.0&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Complete Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1826094027">[{&quot;uuid&quot;:&quot;a426bec4-3f59-11e5-9d44-7b3582e67c54&quot;,&quot;type&quot;:&quot;product&quot;,&quot;name&quot;:&quot;javascript_2.0&quot;,&quot;created&quot;:1439208994331,&quot;modified&quot;:1439208995035,&quot;author&quot;:&quot;Eric Elliott&quot;,&quot;code&quot;:&quot;javascript&quot;,&quot;definition&quot;:{&quot;learning-objectives&quot;:{&quot;Foundations of Javascript&quot;:{&quot;learning-objectives&quot;:{&quot;History and Evolution&quot;:{&quot;learning-objectives&quot;:{}},&quot;Function and Objects&quot;:{&quot;learning-objectives&quot;:{}}}},&quot;Patterns and Best Practices&quot;:{&quot;learning-objectives&quot;:{&quot;Using Modules&quot;:{&quot;learning-objectives&quot;:{}},&quot;Abstraction, Separation of Concerns&quot;:{&quot;learning-objectives&quot;:{}}}},&quot;Building Production Ready Apps&quot;:{&quot;learning-objectives&quot;:{&quot;Access Control, Logging and Error handling&quot;:{&quot;learning-objectives&quot;:{}},&quot;Restful API Development&quot;:{&quot;learning-objectives&quot;:{}},&quot;Multi-lingual Applications&quot;:{&quot;learning-objectives&quot;:{}},&quot;Conventions&quot;:{&quot;learning-objectives&quot;:{}}}}},&quot;tags&quot;:{&quot;reading&quot;:{&quot;tags&quot;:{}},&quot;videos&quot;:{&quot;tags&quot;:{}},&quot;practice&quot;:{&quot;tags&quot;:{}}}},&quot;description&quot;:&quot;Take advantage of JavaScript’s power to build robust web-scale or enterprise applications that are easy to extend and maintain. By applying the design patterns outlined in this practical book, experienced JavaScript developers will learn how to write flexible and resilient code that’s easier—yes, easier—to work with as your code base grows.&quot;,&quot;paths&quot;:{&quot;public-assets&quot;:&quot;https://s3.amazonaws.com/comprodls/products/javascript/2.0&quot;,&quot;secured-assets&quot;:&quot;&quot;},&quot;producttype&quot;:&quot;etextbook&quot;,&quot;status&quot;:&quot;un-published&quot;,&quot;thumbnailsmall&quot;:&quot;OEBPS/cover.jpg&quot;,&quot;thunbnaillarge&quot;:&quot;OEBPS/cover.jpg&quot;,&quot;title&quot;:&quot;JavaScript, 201&quot;,&quot;version&quot;:&quot;2.0&quot;},{&quot;uuid&quot;:&quot;02b8f344-3f5a-11e5-8f7b-85ceb0a37f33&quot;,&quot;type&quot;:&quot;product&quot;,&quot;name&quot;:&quot;howtoplaygolf_2.0&quot;,&quot;created&quot;:1439209152995,&quot;modified&quot;:1439209154254,&quot;author&quot;:&quot;meenal&quot;,&quot;code&quot;:&quot;howtoplaygolf&quot;,&quot;definition&quot;:{&quot;learning-objectives&quot;:{&quot;Playing and Rules&quot;:{&quot;learning-objectives&quot;:{}},&quot;Scoring and Handicaps&quot;:{&quot;learning-objectives&quot;:{}},&quot;Styles and Etiquette&quot;:{&quot;learning-objectives&quot;:{}}},&quot;tags&quot;:{&quot;reading&quot;:{&quot;tags&quot;:{}},&quot;video&quot;:{&quot;tags&quot;:{}},&quot;assessment&quot;:{&quot;tags&quot;:{}},&quot;practice&quot;:{&quot;tags&quot;:{}}}},&quot;description&quot;:&quot;How to Play Golf, 201&quot;,&quot;paths&quot;:{&quot;public-assets&quot;:&quot;https://s3.amazonaws.com/comprodls/products/howtoplaygolf/2.0&quot;,&quot;secured-assets&quot;:&quot;&quot;},&quot;producttype&quot;:&quot;courseware&quot;,&quot;status&quot;:&quot;un-published&quot;,&quot;thumbnailsmall&quot;:&quot;cover.jpg&quot;,&quot;thunbnaillarge&quot;:&quot;cover.jpg&quot;,&quot;title&quot;:&quot;How to Play Golf, 201&quot;,&quot;version&quot;:&quot;2.0&quot;}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Space Role" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">space_role</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.entities[0].space_role</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="false">
            <stringProp name="JSON_PATH">$.[0].uuid</stringProp>
            <stringProp name="EXPECTED_VALUE">${productid}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname=" Extract productid" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">shproductid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.[0].uuid</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
