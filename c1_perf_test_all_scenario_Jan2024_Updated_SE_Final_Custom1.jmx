<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ComproDLS Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="false">
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="env" elementType="Argument">
              <stringProp name="Argument.name">env</stringProp>
              <stringProp name="Argument.value">alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Generate Oauth Token" enabled="true">
          <stringProp name="IncludeController.includepath">token.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
          <stringProp name="BeanShellAssertion.query">${__setProperty(client_assertion,${client_assertion})};</stringProp>
          <stringProp name="BeanShellAssertion.filename"></stringProp>
          <stringProp name="BeanShellAssertion.parameters"></stringProp>
          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
        </BeanShellAssertion>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="comproDLS- new data" enabled="true">
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEW Alpha" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1587361481394</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait" elementType="Argument">
              <stringProp name="Argument.name">maxWait</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait" elementType="Argument">
              <stringProp name="Argument.name">invitationwait</stringProp>
              <stringProp name="Argument.value">20000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait1" elementType="Argument">
              <stringProp name="Argument.name">invitationwait1</stringProp>
              <stringProp name="Argument.value">10000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait" elementType="Argument">
              <stringProp name="Argument.name">asyncWait</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait1" elementType="Argument">
              <stringProp name="Argument.name">asyncWait1</stringProp>
              <stringProp name="Argument.value">6000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_assignedpaths" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_assignedpaths</stringProp>
              <stringProp name="Argument.value">1250</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learning_progress" elementType="Argument">
              <stringProp name="Argument.name">learning_progress</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group_learning_progress" elementType="Argument">
              <stringProp name="Argument.name">group_learning_progress</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group_learning_progressps" elementType="Argument">
              <stringProp name="Argument.name">group_learning_progressps</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogressscorable" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogressscorable</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogress" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogress</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_class_count" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_class_count</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host_url" elementType="Argument">
              <stringProp name="Argument.name">host_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testrun" elementType="Argument">
              <stringProp name="Argument.name">testrun</stringProp>
              <stringProp name="Argument.value">${__P(run_id,Perf)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,cup1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode" elementType="Argument">
              <stringProp name="Argument.name">spacecode</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-ONE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode2" elementType="Argument">
              <stringProp name="Argument.name">spacecode2</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-TWO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacekey" elementType="Argument">
              <stringProp name="Argument.name">spacekey</stringProp>
              <stringProp name="Argument.value">org_perf-test1-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid" elementType="Argument">
              <stringProp name="Argument.name">orgid</stringProp>
              <stringProp name="Argument.value">${__P(orgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="shorgid" elementType="Argument">
              <stringProp name="Argument.name">shorgid</stringProp>
              <stringProp name="Argument.value">${__P(shorgid,sh_alpha_cup1_1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id2" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode2" elementType="Argument">
              <stringProp name="Argument.name">productcode2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verb" elementType="Argument">
              <stringProp name="Argument.name">verb</stringProp>
              <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product-enddate" elementType="Argument">
              <stringProp name="Argument.name">product-enddate</stringProp>
              <stringProp name="Argument.value">${__P(end_date,1575719566000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcodeinst1_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcodeinst1_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,G4cb-UNcT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcode2_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcode2_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,YeaG-DVJZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classname" elementType="Argument">
              <stringProp name="Argument.name">classname</stringProp>
              <stringProp name="Argument.value">${__P(classname,newclass)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multipleUsersForEnrollment" elementType="Argument">
              <stringProp name="Argument.name">multipleUsersForEnrollment</stringProp>
              <stringProp name="Argument.value">${__P(userset,&quot;f3284f19-61e6-43ad-aeec-291cf1cd4548&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pinstance" elementType="Argument">
              <stringProp name="Argument.name">pinstance</stringProp>
              <stringProp name="Argument.value">${__P(InstanceID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code" elementType="Argument">
              <stringProp name="Argument.name">bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentstartdate" elementType="Argument">
              <stringProp name="Argument.name">assignmentstartdate</stringProp>
              <stringProp name="Argument.value">${__P(Start_Date,1562938362000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentenddate" elementType="Argument">
              <stringProp name="Argument.name">assignmentenddate</stringProp>
              <stringProp name="Argument.value">${__P(End_Date,1594560762000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_id" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_id</stringProp>
              <stringProp name="Argument.value">NOT_FOUND</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="counter" elementType="Argument">
              <stringProp name="Argument.name">counter</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationorgid" elementType="Argument">
              <stringProp name="Argument.name">invitationorgid</stringProp>
              <stringProp name="Argument.value">${__P(invitationorgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode1" elementType="Argument">
              <stringProp name="Argument.name">itemcode1</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1544521486954/1544521507623/1544521559147)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode2" elementType="Argument">
              <stringProp name="Argument.name">itemcode2</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521594726</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode3" elementType="Argument">
              <stringProp name="Argument.name">itemcode3</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521622470</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode4" elementType="Argument">
              <stringProp name="Argument.name">itemcode4</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521637851</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode5" elementType="Argument">
              <stringProp name="Argument.name">itemcode5</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521889598/1544522141435</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="workflow_type" elementType="Argument">
              <stringProp name="Argument.name">workflow_type</stringProp>
              <stringProp name="Argument.value">institution_request</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="status" elementType="Argument">
              <stringProp name="Argument.name">status</stringProp>
              <stringProp name="Argument.value">pending</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productGroups" elementType="Argument">
              <stringProp name="Argument.name">productGroups</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productType" elementType="Argument">
              <stringProp name="Argument.name">productType</stringProp>
              <stringProp name="Argument.value">single</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode" elementType="Argument">
              <stringProp name="Argument.name">itemcode</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grouptask" elementType="Argument">
              <stringProp name="Argument.name">grouptask</stringProp>
              <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct1" elementType="Argument">
              <stringProp name="Argument.name">multiproduct1</stringProp>
              <stringProp name="Argument.value">perf_alpha_pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct2" elementType="Argument">
              <stringProp name="Argument.name">multiproduct2</stringProp>
              <stringProp name="Argument.value">perf_alpha_pw1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group-bundle-code" elementType="Argument">
              <stringProp name="Argument.name">group-bundle-code</stringProp>
              <stringProp name="Argument.value">perfalpha_bundle1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid1" elementType="Argument">
              <stringProp name="Argument.name">multiproductid1</stringProp>
              <stringProp name="Argument.value">perfpealpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid2" elementType="Argument">
              <stringProp name="Argument.name">multiproductid2</stringProp>
              <stringProp name="Argument.value">perfpwalpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ielts_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,ielts_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_productcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,ielts_pe)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ielts_ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_itemcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_itemcode</stringProp>
              <stringProp name="Argument.value">1599458729600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task1038" elementType="Argument">
              <stringProp name="Argument.name">task1038</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ebookproductcode" elementType="Argument">
              <stringProp name="Argument.name">ebookproductcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,cqaperftestebook)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ebook_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ebook_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum" elementType="Argument">
              <stringProp name="Argument.name">pageNum</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum_read" elementType="Argument">
              <stringProp name="Argument.name">pageNum_read</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNavigationPause" elementType="Argument">
              <stringProp name="Argument.name">pageNavigationPause</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNavigationLoopCount" elementType="Argument">
              <stringProp name="Argument.name">pageNavigationLoopCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="AddNotesLoopCount" elementType="Argument">
              <stringProp name="Argument.name">AddNotesLoopCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="AddDrawingLoopCount" elementType="Argument">
              <stringProp name="Argument.name">AddDrawingLoopCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="record_size" elementType="Argument">
              <stringProp name="Argument.name">record_size</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid_es" elementType="Argument">
              <stringProp name="Argument.name">orgid_es</stringProp>
              <stringProp name="Argument.value">${__P(orgid_es,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extuseridGetDocument" elementType="Argument">
              <stringProp name="Argument.name">extuseridGetDocument</stringProp>
              <stringProp name="Argument.value">tch_20200602-104742_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="folderid_alldocs" elementType="Argument">
              <stringProp name="Argument.name">folderid_alldocs</stringProp>
              <stringProp name="Argument.value">library/umbrella</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classidGetDocument" elementType="Argument">
              <stringProp name="Argument.name">classidGetDocument</stringProp>
              <stringProp name="Argument.value">7388dde7-8eac-11ea-840b-0242ac110002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extUserIdHideToc" elementType="Argument">
              <stringProp name="Argument.name">extUserIdHideToc</stringProp>
              <stringProp name="Argument.value">std_1616493208993_6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_min_1011" elementType="Argument">
              <stringProp name="Argument.name">userProgress_min_1011</stringProp>
              <stringProp name="Argument.value">550</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_1011" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_1011</stringProp>
              <stringProp name="Argument.value">200</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_min_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userProgress_min_1038nps</stringProp>
              <stringProp name="Argument.value">850</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_1038nps</stringProp>
              <stringProp name="Argument.value">200</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ruleType" elementType="Argument">
              <stringProp name="Argument.name">ruleType</stringProp>
              <stringProp name="Argument.value">content-access</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endTimeForRule" elementType="Argument">
              <stringProp name="Argument.name">endTimeForRule</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,PT9M,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scheduleTime" elementType="Argument">
              <stringProp name="Argument.name">scheduleTime</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,PT2M,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="randomNo" elementType="Argument">
              <stringProp name="Argument.name">randomNo</stringProp>
              <stringProp name="Argument.value">${__Random(0000,9999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradebook_id" elementType="Argument">
              <stringProp name="Argument.name">gradebook_id</stringProp>
              <stringProp name="Argument.value">default-gradebook</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradeformatid" elementType="Argument">
              <stringProp name="Argument.name">gradeformatid</stringProp>
              <stringProp name="Argument.value">c1_default</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ruleTypeDefaultGrade" elementType="Argument">
              <stringProp name="Argument.name">ruleTypeDefaultGrade</stringProp>
              <stringProp name="Argument.value">default-grade-format</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ruleContextId" elementType="Argument">
              <stringProp name="Argument.name">ruleContextId</stringProp>
              <stringProp name="Argument.value">cup1#perf-test1-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productCodeGetDocument" elementType="Argument">
              <stringProp name="Argument.name">productCodeGetDocument</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacekeySharedOrg" elementType="Argument">
              <stringProp name="Argument.name">spacekeySharedOrg</stringProp>
              <stringProp name="Argument.value">org_sh_alpha_cup1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="custCompCode" elementType="Argument">
              <stringProp name="Argument.name">custCompCode</stringProp>
              <stringProp name="Argument.value">CustComcode_20230814-172925_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="npsitemcode" elementType="Argument">
              <stringProp name="Argument.name">npsitemcode</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="psitemcode" elementType="Argument">
              <stringProp name="Argument.name">psitemcode</stringProp>
              <stringProp name="Argument.value">1544526345845/1544526961740/1544527585431</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="documentid" elementType="Argument">
              <stringProp name="Argument.name">documentid</stringProp>
              <stringProp name="Argument.value">lastKnown</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradeformatToUnAssociate" elementType="Argument">
              <stringProp name="Argument.name">gradeformatToUnAssociate</stringProp>
              <stringProp name="Argument.value">i8NNEUHQLDBh7DBxopUeW</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradeformatToAssociate" elementType="Argument">
              <stringProp name="Argument.name">gradeformatToAssociate</stringProp>
              <stringProp name="Argument.value">tvp4hFUTXuxba45DjMFq4 </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="custCompToAdd" elementType="Argument">
              <stringProp name="Argument.name">custCompToAdd</stringProp>
              <stringProp name="Argument.value">CustComcode_20230814-172925_5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="custCompToDelete" elementType="Argument">
              <stringProp name="Argument.name">custCompToDelete</stringProp>
              <stringProp name="Argument.value">CustComcode_20230814-172925_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait_1001" elementType="Argument">
              <stringProp name="Argument.name">minWait_1001</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait_1001" elementType="Argument">
              <stringProp name="Argument.name">maxWait_1001</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userstate_1011" elementType="Argument">
              <stringProp name="Argument.name">userstate_1011</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userstate_1012" elementType="Argument">
              <stringProp name="Argument.name">userstate_1012</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userstate_1038ps" elementType="Argument">
              <stringProp name="Argument.name">userstate_1038ps</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userstate_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userstate_1038nps</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userstate_1010" elementType="Argument">
              <stringProp name="Argument.name">userstate_1010</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userstate_1055ps" elementType="Argument">
              <stringProp name="Argument.name">userstate_1055ps</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userstate_1055nps" elementType="Argument">
              <stringProp name="Argument.name">userstate_1055nps</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradeformatToAssociateTitle" elementType="Argument">
              <stringProp name="Argument.name">gradeformatToAssociateTitle</stringProp>
              <stringProp name="Argument.value">Gradeformat2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classCode25Components" elementType="Argument">
              <stringProp name="Argument.name">classCode25Components</stringProp>
              <stringProp name="Argument.value">8XH6-wJei</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - LTI ALPHA" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="host_url_lti" elementType="Argument">
              <stringProp name="Argument.name">host_url_lti</stringProp>
              <stringProp name="Argument.value">${__P(host_url,lti-alpha.cambridgeone.org)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="platformId" elementType="Argument">
              <stringProp name="Argument.name">platformId</stringProp>
              <stringProp name="Argument.value">7caa930559</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="deploymentId" elementType="Argument">
              <stringProp name="Argument.name">deploymentId</stringProp>
              <stringProp name="Argument.value">48e7869fad</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="deploymentId_Comp" elementType="Argument">
              <stringProp name="Argument.name">deploymentId_Comp</stringProp>
              <stringProp name="Argument.value">56ed788f16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="resLinkId" elementType="Argument">
              <stringProp name="Argument.name">resLinkId</stringProp>
              <stringProp name="Argument.value">${__P(resLinkId,ielts_pe__1599458729600__1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="resLinkId_Comp" elementType="Argument">
              <stringProp name="Argument.name">resLinkId_Comp</stringProp>
              <stringProp name="Argument.value">pcperfprodct11__ic1631184898880___1631184945407__an1__ai1729068137761__lsGX5YsSbSOaCFw3Th</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="targetLinkUri" elementType="Argument">
              <stringProp name="Argument.name">targetLinkUri</stringProp>
              <stringProp name="Argument.value">https://cup-lti-tool.herokuapp.com/tools/7/lti/launch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testId" elementType="Argument">
              <stringProp name="Argument.name">testId</stringProp>
              <stringProp name="Argument.value">IELTSi_T1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testId_Comp" elementType="Argument">
              <stringProp name="Argument.name">testId_Comp</stringProp>
              <stringProp name="Argument.value">QA_CEE_A1_CT_W_End_US</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="referer" elementType="Argument">
              <stringProp name="Argument.name">referer</stringProp>
              <stringProp name="Argument.value">https://c1-alpha.cambridgeone.org</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="response_type" elementType="Argument">
              <stringProp name="Argument.name">response_type</stringProp>
              <stringProp name="Argument.value">id_token</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="response_mode" elementType="Argument">
              <stringProp name="Argument.name">response_mode</stringProp>
              <stringProp name="Argument.value">form_post</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scope" elementType="Argument">
              <stringProp name="Argument.name">scope</stringProp>
              <stringProp name="Argument.value">openid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="lti_log" elementType="Argument">
              <stringProp name="Argument.name">lti_log</stringProp>
              <stringProp name="Argument.value">Submitted</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grant_type" elementType="Argument">
              <stringProp name="Argument.name">grant_type</stringProp>
              <stringProp name="Argument.value">client_credentials</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_assertion_type" elementType="Argument">
              <stringProp name="Argument.name">client_assertion_type</stringProp>
              <stringProp name="Argument.value">urn:ietf:params:oauth:client-assertion-type:jwt-bearer</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_assertion" elementType="Argument">
              <stringProp name="Argument.name">client_assertion</stringProp>
              <stringProp name="Argument.value">eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjJ3S1Y0cW1Fekk2R2xjY09NNmV4aVFfVXR3ZFk4VHFSNkM5bnlQZ2R6MEkifQ.eyJpc3MiOiJkZTBmNjVhODZjIiwic3ViIjoiZGUwZjY1YTg2YyIsImF1ZCI6Imh0dHBzOi8vbHRpLWFscGhhLmNhbWJyaWRnZW9uZS5vcmcvdjEvbHRpL3BsYXRmb3Jtcy83Y2FhOTMwNTU5L29hdXRoIiwianRpIjoiY2UxMjc4YjBjN2EwMWU4ZTJhMjQwODVjZTk3ODU1Y2QiLCJpYXQiOjE3NDQxODg1MTUsImV4cCI6MTc0NDI3NDkxNX0.jJNfOEp2dKwqx_UrMXS4Gk50eoT0YhEfulsqDZ_WAM0qOC-te-mMS77BGRU_iUKCi_Mhle1b7lGSR3ObkxyfKNc-UNmtgbehBp1iFekkzlDg3TlPuh6bt4tl9Nh2V9w4IKINSy3PIDuuu9N0_3RMAGrW3K7uqZMkRfJtQoLPI6L-uRRGgc4gKkW5YkJogowVxBC1TRE1svH6dxSLHL_uYITZTAokgvNi5kJU1SbSF5tCQqeLNb_wjDfAZSbQ2sXwjLklfOhenLxO9dNXpSdwsT1gSTY50tcT-n0bYDTKP14prlouPOg1pMns8vDj10gzN_3uh7zJ9pOjaSTwz7pg-A</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scopeOauth" elementType="Argument">
              <stringProp name="Argument.name">scopeOauth</stringProp>
              <stringProp name="Argument.value">https://purl.imsglobal.org/spec/lti-ags/scope/score</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sharedOrgId" elementType="Argument">
              <stringProp name="Argument.name">sharedOrgId</stringProp>
              <stringProp name="Argument.value">sh_alpha_cup1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scoreGiven" elementType="Argument">
              <stringProp name="Argument.name">scoreGiven</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scoreMaximum" elementType="Argument">
              <stringProp name="Argument.name">scoreMaximum</stringProp>
              <stringProp name="Argument.value">${__P(scoreMaximum,10)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="comment" elementType="Argument">
              <stringProp name="Argument.name">comment</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,Diagnostic Score)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activityProgress" elementType="Argument">
              <stringProp name="Argument.name">activityProgress</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,Completed)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradingProgress" elementType="Argument">
              <stringProp name="Argument.name">gradingProgress</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,FullyGraded)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="performDurationTestS1" elementType="Argument">
              <stringProp name="Argument.name">performDurationTestS1</stringProp>
              <stringProp name="Argument.value">29000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="performDurationTestS2" elementType="Argument">
              <stringProp name="Argument.name">performDurationTestS2</stringProp>
              <stringProp name="Argument.value">36400</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="performDurationTestS3" elementType="Argument">
              <stringProp name="Argument.name">performDurationTestS3</stringProp>
              <stringProp name="Argument.value">32500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="MetricaWaitTime" elementType="Argument">
              <stringProp name="Argument.name">MetricaWaitTime</stringProp>
              <stringProp name="Argument.value">946</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="prompt" elementType="Argument">
              <stringProp name="Argument.name">prompt</stringProp>
              <stringProp name="Argument.value">none</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currentTime" elementType="Argument">
              <stringProp name="Argument.name">currentTime</stringProp>
              <stringProp name="Argument.value">${__time}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isReset" elementType="Argument">
              <stringProp name="Argument.name">isReset</stringProp>
              <stringProp name="Argument.value">False</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="env" elementType="Argument">
              <stringProp name="Argument.name">env</stringProp>
              <stringProp name="Argument.value">alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - LTI TOOL ALPHA" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="host_url_lti_tool" elementType="Argument">
              <stringProp name="Argument.name">host_url_lti_tool</stringProp>
              <stringProp name="Argument.value">lti-tool-alpha.cambridgeone.org</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="iss" elementType="Argument">
              <stringProp name="Argument.name">iss</stringProp>
              <stringProp name="Argument.value">https://cup-lti-gw.herokuapp.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="lti_deployment_id" elementType="Argument">
              <stringProp name="Argument.name">lti_deployment_id</stringProp>
              <stringProp name="Argument.value">35fef742-e398-11eb-ba80-0242ac130004</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_id" elementType="Argument">
              <stringProp name="Argument.name">client_id</stringProp>
              <stringProp name="Argument.value">a5c229f6-e397-11eb-ba80-0242ac130004</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="target_link_uri" elementType="Argument">
              <stringProp name="Argument.name">target_link_uri</stringProp>
              <stringProp name="Argument.value">https://lti-tool-alpha.cambridgeone.org/v1/lti/launch?resource=c1/unit/evpel1_bundle/evpel1/1544522366063</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="heroku_host_url" elementType="Argument">
              <stringProp name="Argument.name">heroku_host_url</stringProp>
              <stringProp name="Argument.value">c1-perf-test-poc-4d4ff24332d0.herokuapp.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="target_link_uri_deeplink" elementType="Argument">
              <stringProp name="Argument.name">target_link_uri_deeplink</stringProp>
              <stringProp name="Argument.value">https://lti-tool-alpha.cambridgeone.org/v1/lti/launch?resource=c1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="score" elementType="Argument">
              <stringProp name="Argument.name">score</stringProp>
              <stringProp name="Argument.value">75</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="JwksWaitTime" elementType="Argument">
              <stringProp name="Argument.name">JwksWaitTime</stringProp>
              <stringProp name="Argument.value">349</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="platformID" elementType="Argument">
              <stringProp name="Argument.name">platformID</stringProp>
              <stringProp name="Argument.value">60ee802a16a29c31c4730fe7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="lti_message_hint" elementType="Argument">
              <stringProp name="Argument.name">lti_message_hint</stringProp>
              <stringProp name="Argument.value">res-000-508-001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="login_hint" elementType="Argument">
              <stringProp name="Argument.name">login_hint</stringProp>
              <stringProp name="Argument.value">user-000-000-001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="send_score_url" elementType="Argument">
              <stringProp name="Argument.name">send_score_url</stringProp>
              <stringProp name="Argument.value">c1-alpha.cambridgeone.org</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Bundle Details" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="bundleCount" elementType="Argument">
              <stringProp name="Argument.name">bundleCount</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code1" elementType="Argument">
              <stringProp name="Argument.name">bundle-code1</stringProp>
              <stringProp name="Argument.value">perf_bundle_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">perf_bundle_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code3" elementType="Argument">
              <stringProp name="Argument.name">bundle-code3</stringProp>
              <stringProp name="Argument.value">perf_bundle_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code4" elementType="Argument">
              <stringProp name="Argument.name">bundle-code4</stringProp>
              <stringProp name="Argument.value">perf_bundle_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle1Products1" elementType="Argument">
              <stringProp name="Argument.name">bundle1Products1</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle1Products2" elementType="Argument">
              <stringProp name="Argument.name">bundle1Products2</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle1Products3" elementType="Argument">
              <stringProp name="Argument.name">bundle1Products3</stringProp>
              <stringProp name="Argument.value">perfb1test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle1Products4" elementType="Argument">
              <stringProp name="Argument.name">bundle1Products4</stringProp>
              <stringProp name="Argument.value">perfb1rb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle2Products1" elementType="Argument">
              <stringProp name="Argument.name">bundle2Products1</stringProp>
              <stringProp name="Argument.value">perfb2pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle2Products2" elementType="Argument">
              <stringProp name="Argument.name">bundle2Products2</stringProp>
              <stringProp name="Argument.value">perfb2pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle2Products3" elementType="Argument">
              <stringProp name="Argument.name">bundle2Products3</stringProp>
              <stringProp name="Argument.value">perfb2ebook</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle2Products4" elementType="Argument">
              <stringProp name="Argument.name">bundle2Products4</stringProp>
              <stringProp name="Argument.value">perfb2rb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle3Products1" elementType="Argument">
              <stringProp name="Argument.name">bundle3Products1</stringProp>
              <stringProp name="Argument.value">perfb3pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle3Products2" elementType="Argument">
              <stringProp name="Argument.name">bundle3Products2</stringProp>
              <stringProp name="Argument.value">perfb3pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle3Products3" elementType="Argument">
              <stringProp name="Argument.name">bundle3Products3</stringProp>
              <stringProp name="Argument.value">perfb3test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle3Products4" elementType="Argument">
              <stringProp name="Argument.name">bundle3Products4</stringProp>
              <stringProp name="Argument.value">perfb3rb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle3Products5" elementType="Argument">
              <stringProp name="Argument.name">bundle3Products5</stringProp>
              <stringProp name="Argument.value">perfb3pplus</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle4Products1" elementType="Argument">
              <stringProp name="Argument.name">bundle4Products1</stringProp>
              <stringProp name="Argument.value">perfb4pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle4Products2" elementType="Argument">
              <stringProp name="Argument.name">bundle4Products2</stringProp>
              <stringProp name="Argument.value">perfb4pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle4Products3" elementType="Argument">
              <stringProp name="Argument.name">bundle4Products3</stringProp>
              <stringProp name="Argument.value">perfb4ebook</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle4Products4" elementType="Argument">
              <stringProp name="Argument.name">bundle4Products4</stringProp>
              <stringProp name="Argument.value">perfb4rb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle4Products5" elementType="Argument">
              <stringProp name="Argument.name">bundle4Products5</stringProp>
              <stringProp name="Argument.value">perfb4pplus</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle1ProductCount" elementType="Argument">
              <stringProp name="Argument.name">bundle1ProductCount</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle2ProductCount" elementType="Argument">
              <stringProp name="Argument.name">bundle2ProductCount</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle3ProductCount" elementType="Argument">
              <stringProp name="Argument.name">bundle3ProductCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle4ProductCount" elementType="Argument">
              <stringProp name="Argument.name">bundle4ProductCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="cat1pe1" elementType="Argument">
              <stringProp name="Argument.name">cat1pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe2" elementType="Argument">
              <stringProp name="Argument.name">cat1pe2</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe3" elementType="Argument">
              <stringProp name="Argument.name">cat1pe3</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe4" elementType="Argument">
              <stringProp name="Argument.name">cat1pe4</stringProp>
              <stringProp name="Argument.value">perfprod21</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe5" elementType="Argument">
              <stringProp name="Argument.name">cat1pe5</stringProp>
              <stringProp name="Argument.value">perfprod22</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe6" elementType="Argument">
              <stringProp name="Argument.name">cat1pe6</stringProp>
              <stringProp name="Argument.value">perfprod23</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe7" elementType="Argument">
              <stringProp name="Argument.name">cat1pe7</stringProp>
              <stringProp name="Argument.value">perfprod24</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe8" elementType="Argument">
              <stringProp name="Argument.name">cat1pe8</stringProp>
              <stringProp name="Argument.value">perfprod25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe1" elementType="Argument">
              <stringProp name="Argument.name">cat2pe1</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe2" elementType="Argument">
              <stringProp name="Argument.name">cat2pe2</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe3" elementType="Argument">
              <stringProp name="Argument.name">cat2pe3</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe4" elementType="Argument">
              <stringProp name="Argument.name">cat2pe4</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe5" elementType="Argument">
              <stringProp name="Argument.name">cat2pe5</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe6" elementType="Argument">
              <stringProp name="Argument.name">cat2pe6</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe7" elementType="Argument">
              <stringProp name="Argument.name">cat2pe7</stringProp>
              <stringProp name="Argument.value">perfprod9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe8" elementType="Argument">
              <stringProp name="Argument.name">cat2pe8</stringProp>
              <stringProp name="Argument.value">perfprod10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe9" elementType="Argument">
              <stringProp name="Argument.name">cat2pe9</stringProp>
              <stringProp name="Argument.value">perfprod11</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe10" elementType="Argument">
              <stringProp name="Argument.name">cat2pe10</stringProp>
              <stringProp name="Argument.value">perfprod12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe1" elementType="Argument">
              <stringProp name="Argument.name">cat3pe1</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe2" elementType="Argument">
              <stringProp name="Argument.name">cat3pe2</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe3" elementType="Argument">
              <stringProp name="Argument.name">cat3pe3</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe4" elementType="Argument">
              <stringProp name="Argument.name">cat3pe4</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe5" elementType="Argument">
              <stringProp name="Argument.name">cat3pe5</stringProp>
              <stringProp name="Argument.value">perfprod9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe6" elementType="Argument">
              <stringProp name="Argument.name">cat3pe6</stringProp>
              <stringProp name="Argument.value">perfprod10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe7" elementType="Argument">
              <stringProp name="Argument.name">cat3pe7</stringProp>
              <stringProp name="Argument.value">perfprod11</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe8" elementType="Argument">
              <stringProp name="Argument.name">cat3pe8</stringProp>
              <stringProp name="Argument.value">perfprod12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe9" elementType="Argument">
              <stringProp name="Argument.name">cat3pe9</stringProp>
              <stringProp name="Argument.value">perfprod86</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe10" elementType="Argument">
              <stringProp name="Argument.name">cat3pe10</stringProp>
              <stringProp name="Argument.value">perfprod87</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe11" elementType="Argument">
              <stringProp name="Argument.name">cat3pe11</stringProp>
              <stringProp name="Argument.value">perfprod88</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe12" elementType="Argument">
              <stringProp name="Argument.name">cat3pe12</stringProp>
              <stringProp name="Argument.value">perfprod89</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe13" elementType="Argument">
              <stringProp name="Argument.name">cat3pe13</stringProp>
              <stringProp name="Argument.value">perfprod90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe14" elementType="Argument">
              <stringProp name="Argument.name">cat3pe14</stringProp>
              <stringProp name="Argument.value">perfprod91</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe15" elementType="Argument">
              <stringProp name="Argument.name">cat3pe15</stringProp>
              <stringProp name="Argument.value">perfprod92</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe1" elementType="Argument">
              <stringProp name="Argument.name">cat4pe1</stringProp>
              <stringProp name="Argument.value">perfprod41</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe2" elementType="Argument">
              <stringProp name="Argument.name">cat4pe2</stringProp>
              <stringProp name="Argument.value">perfprod42</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe3" elementType="Argument">
              <stringProp name="Argument.name">cat4pe3</stringProp>
              <stringProp name="Argument.value">perfprod43</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe4" elementType="Argument">
              <stringProp name="Argument.name">cat4pe4</stringProp>
              <stringProp name="Argument.value">perfprod44</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe5" elementType="Argument">
              <stringProp name="Argument.name">cat4pe5</stringProp>
              <stringProp name="Argument.value">perfprod45</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe6" elementType="Argument">
              <stringProp name="Argument.name">cat4pe6</stringProp>
              <stringProp name="Argument.value">perfprod46</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe7" elementType="Argument">
              <stringProp name="Argument.name">cat4pe7</stringProp>
              <stringProp name="Argument.value">perfprod47</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe8" elementType="Argument">
              <stringProp name="Argument.name">cat4pe8</stringProp>
              <stringProp name="Argument.value">perfprod48</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe9" elementType="Argument">
              <stringProp name="Argument.name">cat4pe9</stringProp>
              <stringProp name="Argument.value">perfprod49</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe10" elementType="Argument">
              <stringProp name="Argument.name">cat4pe10</stringProp>
              <stringProp name="Argument.value">perfprod50</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe11" elementType="Argument">
              <stringProp name="Argument.name">cat4pe11</stringProp>
              <stringProp name="Argument.value">perfprod101</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe12" elementType="Argument">
              <stringProp name="Argument.name">cat4pe12</stringProp>
              <stringProp name="Argument.value">perfprod102</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe13" elementType="Argument">
              <stringProp name="Argument.name">cat4pe13</stringProp>
              <stringProp name="Argument.value">perfprod103</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe14" elementType="Argument">
              <stringProp name="Argument.name">cat4pe14</stringProp>
              <stringProp name="Argument.value">perfprod104</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe15" elementType="Argument">
              <stringProp name="Argument.name">cat4pe15</stringProp>
              <stringProp name="Argument.value">perfprod105</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1" elementType="Argument">
              <stringProp name="Argument.name">cat1</stringProp>
              <stringProp name="Argument.value">3B8PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2" elementType="Argument">
              <stringProp name="Argument.name">cat2</stringProp>
              <stringProp name="Argument.value">3B10PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3" elementType="Argument">
              <stringProp name="Argument.name">cat3</stringProp>
              <stringProp name="Argument.value">3B15PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4" elementType="Argument">
              <stringProp name="Argument.name">cat4</stringProp>
              <stringProp name="Argument.value">2B15PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1b1" elementType="Argument">
              <stringProp name="Argument.name">cat1b1</stringProp>
              <stringProp name="Argument.value">evpel1_bundle</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1b2" elementType="Argument">
              <stringProp name="Argument.name">cat1b2</stringProp>
              <stringProp name="Argument.value">perf_bundle_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1b3" elementType="Argument">
              <stringProp name="Argument.name">cat1b3</stringProp>
              <stringProp name="Argument.value">perf_bundle_8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2b1" elementType="Argument">
              <stringProp name="Argument.name">cat2b1</stringProp>
              <stringProp name="Argument.value">perf_bundle_17</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2b2" elementType="Argument">
              <stringProp name="Argument.name">cat2b2</stringProp>
              <stringProp name="Argument.value">perf_bundle_18</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2b3" elementType="Argument">
              <stringProp name="Argument.name">cat2b3</stringProp>
              <stringProp name="Argument.value">perf_bundle_19</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3b1" elementType="Argument">
              <stringProp name="Argument.name">cat3b1</stringProp>
              <stringProp name="Argument.value">perf_bundle_18</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3b2" elementType="Argument">
              <stringProp name="Argument.name">cat3b2</stringProp>
              <stringProp name="Argument.value">perf_bundle_19</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3b3" elementType="Argument">
              <stringProp name="Argument.name">cat3b3</stringProp>
              <stringProp name="Argument.value">perf_bundle_22</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4b1" elementType="Argument">
              <stringProp name="Argument.name">cat4b1</stringProp>
              <stringProp name="Argument.value">perf_bundle_12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4b2" elementType="Argument">
              <stringProp name="Argument.name">cat4b2</stringProp>
              <stringProp name="Argument.value">perf_bundle_24</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle25pe1" elementType="Argument">
              <stringProp name="Argument.name">perfbundle25pe1</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle25pe2" elementType="Argument">
              <stringProp name="Argument.name">perfbundle25pe2</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle25pe3" elementType="Argument">
              <stringProp name="Argument.name">perfbundle25pe3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle25pe4" elementType="Argument">
              <stringProp name="Argument.name">perfbundle25pe4</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle25pe5" elementType="Argument">
              <stringProp name="Argument.name">perfbundle25pe5</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe1" elementType="Argument">
              <stringProp name="Argument.name">cat5pe1</stringProp>
              <stringProp name="Argument.value">perfprod51</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe2" elementType="Argument">
              <stringProp name="Argument.name">cat5pe2</stringProp>
              <stringProp name="Argument.value">perfprod52</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe3" elementType="Argument">
              <stringProp name="Argument.name">cat5pe3</stringProp>
              <stringProp name="Argument.value">perfprod53</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe4" elementType="Argument">
              <stringProp name="Argument.name">cat5pe4</stringProp>
              <stringProp name="Argument.value">perfprod54</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe5" elementType="Argument">
              <stringProp name="Argument.name">cat5pe5</stringProp>
              <stringProp name="Argument.value">perfprod55</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe6" elementType="Argument">
              <stringProp name="Argument.name">cat5pe6</stringProp>
              <stringProp name="Argument.value">perfprod56</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe7" elementType="Argument">
              <stringProp name="Argument.name">cat5pe7</stringProp>
              <stringProp name="Argument.value">perfprod57</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe8" elementType="Argument">
              <stringProp name="Argument.name">cat5pe8</stringProp>
              <stringProp name="Argument.value">perfprod58</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe9" elementType="Argument">
              <stringProp name="Argument.name">cat5pe9</stringProp>
              <stringProp name="Argument.value">perfprod59</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe10" elementType="Argument">
              <stringProp name="Argument.name">cat5pe10</stringProp>
              <stringProp name="Argument.value">perfprod60</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat6pe1" elementType="Argument">
              <stringProp name="Argument.name">cat6pe1</stringProp>
              <stringProp name="Argument.value">perfprod74</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat6pe2" elementType="Argument">
              <stringProp name="Argument.name">cat6pe2</stringProp>
              <stringProp name="Argument.value">perfprod75</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat6pe3" elementType="Argument">
              <stringProp name="Argument.name">cat6pe3</stringProp>
              <stringProp name="Argument.value">perfprod76</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat6pe4" elementType="Argument">
              <stringProp name="Argument.name">cat6pe4</stringProp>
              <stringProp name="Argument.value">perfprod77</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle6pe1" elementType="Argument">
              <stringProp name="Argument.name">perfbundle6pe1</stringProp>
              <stringProp name="Argument.value">perfprod15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle6pe2" elementType="Argument">
              <stringProp name="Argument.name">perfbundle6pe2</stringProp>
              <stringProp name="Argument.value">perfprod16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle6pe3" elementType="Argument">
              <stringProp name="Argument.name">perfbundle6pe3</stringProp>
              <stringProp name="Argument.value">perfprod17</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle21pe1" elementType="Argument">
              <stringProp name="Argument.name">perfbundle21pe1</stringProp>
              <stringProp name="Argument.value">perfprod81</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle21pe2" elementType="Argument">
              <stringProp name="Argument.name">perfbundle21pe2</stringProp>
              <stringProp name="Argument.value">perfprod82</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle21pe3" elementType="Argument">
              <stringProp name="Argument.name">perfbundle21pe3</stringProp>
              <stringProp name="Argument.value">perfprod83</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle21pe4" elementType="Argument">
              <stringProp name="Argument.name">perfbundle21pe4</stringProp>
              <stringProp name="Argument.value">perfprod84</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle21pe5" elementType="Argument">
              <stringProp name="Argument.name">perfbundle21pe5</stringProp>
              <stringProp name="Argument.value">perfprod85</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe1" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe1</stringProp>
              <stringProp name="Argument.value">perf43_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe2" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe2</stringProp>
              <stringProp name="Argument.value">perf43_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe3" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe3</stringProp>
              <stringProp name="Argument.value">perf43_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe4" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe4</stringProp>
              <stringProp name="Argument.value">perf43_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe5" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe5</stringProp>
              <stringProp name="Argument.value">perf43_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe6" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe6</stringProp>
              <stringProp name="Argument.value">perf43_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe7" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe7</stringProp>
              <stringProp name="Argument.value">perf43_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe8" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe8</stringProp>
              <stringProp name="Argument.value">perf43_500lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe9" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe9</stringProp>
              <stringProp name="Argument.value">perf43_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe10" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe10</stringProp>
              <stringProp name="Argument.value">perf43_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe11" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe11</stringProp>
              <stringProp name="Argument.value">perfebook1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe12" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe12</stringProp>
              <stringProp name="Argument.value">perfebook2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe13" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe13</stringProp>
              <stringProp name="Argument.value">perfebook3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe14" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe14</stringProp>
              <stringProp name="Argument.value">perfebook4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe15" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe15</stringProp>
              <stringProp name="Argument.value">perfebook5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe16" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe16</stringProp>
              <stringProp name="Argument.value">perfebook6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe17" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe17</stringProp>
              <stringProp name="Argument.value">perfebook7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe18" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe18</stringProp>
              <stringProp name="Argument.value">perfrb1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe19" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe19</stringProp>
              <stringProp name="Argument.value">perfrb2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe20" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe20</stringProp>
              <stringProp name="Argument.value">perfrb3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe21" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe21</stringProp>
              <stringProp name="Argument.value">perfrb4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe22" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe22</stringProp>
              <stringProp name="Argument.value">perfrb5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe23" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe23</stringProp>
              <stringProp name="Argument.value">perfrb6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfbundle43pe24" elementType="Argument">
              <stringProp name="Argument.name">perfbundle43pe24</stringProp>
              <stringProp name="Argument.value">perfebook8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="l1pe1" elementType="Argument">
              <stringProp name="Argument.name">l1pe1</stringProp>
              <stringProp name="Argument.value">perf30_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l1pe2" elementType="Argument">
              <stringProp name="Argument.name">l1pe2</stringProp>
              <stringProp name="Argument.value">perf30_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l1pe3" elementType="Argument">
              <stringProp name="Argument.name">l1pe3</stringProp>
              <stringProp name="Argument.value">perf30_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l1pe4" elementType="Argument">
              <stringProp name="Argument.name">l1pe4</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe1" elementType="Argument">
              <stringProp name="Argument.name">l2pe1</stringProp>
              <stringProp name="Argument.value">perf30_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe2" elementType="Argument">
              <stringProp name="Argument.name">l2pe2</stringProp>
              <stringProp name="Argument.value">perf30_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe3" elementType="Argument">
              <stringProp name="Argument.name">l2pe3</stringProp>
              <stringProp name="Argument.value">perf30_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe4" elementType="Argument">
              <stringProp name="Argument.name">l2pe4</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe5" elementType="Argument">
              <stringProp name="Argument.name">l2pe5</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe6" elementType="Argument">
              <stringProp name="Argument.name">l2pe6</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe1" elementType="Argument">
              <stringProp name="Argument.name">l3pe1</stringProp>
              <stringProp name="Argument.value">perf29_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe2" elementType="Argument">
              <stringProp name="Argument.name">l3pe2</stringProp>
              <stringProp name="Argument.value">perf29_100lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe3" elementType="Argument">
              <stringProp name="Argument.name">l3pe3</stringProp>
              <stringProp name="Argument.value">perf29_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe4" elementType="Argument">
              <stringProp name="Argument.name">l3pe4</stringProp>
              <stringProp name="Argument.value">perf29_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe5" elementType="Argument">
              <stringProp name="Argument.name">l3pe5</stringProp>
              <stringProp name="Argument.value">perf29_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe6" elementType="Argument">
              <stringProp name="Argument.name">l3pe6</stringProp>
              <stringProp name="Argument.value">perf29_300lo_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe7" elementType="Argument">
              <stringProp name="Argument.name">l3pe7</stringProp>
              <stringProp name="Argument.value">perf31_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe8" elementType="Argument">
              <stringProp name="Argument.name">l3pe8</stringProp>
              <stringProp name="Argument.value">perf31_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe9" elementType="Argument">
              <stringProp name="Argument.name">l3pe9</stringProp>
              <stringProp name="Argument.value">perf31_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe10" elementType="Argument">
              <stringProp name="Argument.name">l3pe10</stringProp>
              <stringProp name="Argument.value">perf31_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe1" elementType="Argument">
              <stringProp name="Argument.name">l4pe1</stringProp>
              <stringProp name="Argument.value">perf29_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe2" elementType="Argument">
              <stringProp name="Argument.name">l4pe2</stringProp>
              <stringProp name="Argument.value">perf29_100lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe3" elementType="Argument">
              <stringProp name="Argument.name">l4pe3</stringProp>
              <stringProp name="Argument.value">perf29_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe4" elementType="Argument">
              <stringProp name="Argument.name">l4pe4</stringProp>
              <stringProp name="Argument.value">perf29_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe5" elementType="Argument">
              <stringProp name="Argument.name">l4pe5</stringProp>
              <stringProp name="Argument.value">perf29_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe6" elementType="Argument">
              <stringProp name="Argument.name">l4pe6</stringProp>
              <stringProp name="Argument.value">perf29_300lo_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe7" elementType="Argument">
              <stringProp name="Argument.name">l4pe7</stringProp>
              <stringProp name="Argument.value">perf31_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe8" elementType="Argument">
              <stringProp name="Argument.name">l4pe8</stringProp>
              <stringProp name="Argument.value">perf31_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe9" elementType="Argument">
              <stringProp name="Argument.name">l4pe9</stringProp>
              <stringProp name="Argument.value">perf31_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe10" elementType="Argument">
              <stringProp name="Argument.name">l4pe10</stringProp>
              <stringProp name="Argument.value">perf31_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe1" elementType="Argument">
              <stringProp name="Argument.name">l5pe1</stringProp>
              <stringProp name="Argument.value">perf29_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe2" elementType="Argument">
              <stringProp name="Argument.name">l5pe2</stringProp>
              <stringProp name="Argument.value">perf29_100lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe3" elementType="Argument">
              <stringProp name="Argument.name">l5pe3</stringProp>
              <stringProp name="Argument.value">perf29_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe4" elementType="Argument">
              <stringProp name="Argument.name">l5pe4</stringProp>
              <stringProp name="Argument.value">perf29_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe5" elementType="Argument">
              <stringProp name="Argument.name">l5pe5</stringProp>
              <stringProp name="Argument.value">perf29_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe6" elementType="Argument">
              <stringProp name="Argument.name">l5pe6</stringProp>
              <stringProp name="Argument.value">perf29_300lo_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe7" elementType="Argument">
              <stringProp name="Argument.name">l5pe7</stringProp>
              <stringProp name="Argument.value">perf31_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe8" elementType="Argument">
              <stringProp name="Argument.name">l5pe8</stringProp>
              <stringProp name="Argument.value">perf31_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe9" elementType="Argument">
              <stringProp name="Argument.name">l5pe9</stringProp>
              <stringProp name="Argument.value">perf31_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe10" elementType="Argument">
              <stringProp name="Argument.name">l5pe10</stringProp>
              <stringProp name="Argument.value">perf31_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l6pe1" elementType="Argument">
              <stringProp name="Argument.name">l6pe1</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l6pe2" elementType="Argument">
              <stringProp name="Argument.name">l6pe2</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l6pe3" elementType="Argument">
              <stringProp name="Argument.name">l6pe3</stringProp>
              <stringProp name="Argument.value">perfb2pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l6pe4" elementType="Argument">
              <stringProp name="Argument.name">l6pe4</stringProp>
              <stringProp name="Argument.value">perfb2pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe1" elementType="Argument">
              <stringProp name="Argument.name">m1pe1</stringProp>
              <stringProp name="Argument.value">perf32_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe2" elementType="Argument">
              <stringProp name="Argument.name">m1pe2</stringProp>
              <stringProp name="Argument.value">perf32_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe3" elementType="Argument">
              <stringProp name="Argument.name">m1pe3</stringProp>
              <stringProp name="Argument.value">perf32_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe4" elementType="Argument">
              <stringProp name="Argument.name">m1pe4</stringProp>
              <stringProp name="Argument.value">perf32_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe5" elementType="Argument">
              <stringProp name="Argument.name">m1pe5</stringProp>
              <stringProp name="Argument.value">perf32_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe6" elementType="Argument">
              <stringProp name="Argument.name">m1pe6</stringProp>
              <stringProp name="Argument.value">perf32_400lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe7" elementType="Argument">
              <stringProp name="Argument.name">m1pe7</stringProp>
              <stringProp name="Argument.value">perf32_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe8" elementType="Argument">
              <stringProp name="Argument.name">m1pe8</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe9" elementType="Argument">
              <stringProp name="Argument.name">m1pe9</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe10" elementType="Argument">
              <stringProp name="Argument.name">m1pe10</stringProp>
              <stringProp name="Argument.value">perf39_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe11" elementType="Argument">
              <stringProp name="Argument.name">m1pe11</stringProp>
              <stringProp name="Argument.value">perf39_100lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe1" elementType="Argument">
              <stringProp name="Argument.name">m2pe1</stringProp>
              <stringProp name="Argument.value">perf32_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe2" elementType="Argument">
              <stringProp name="Argument.name">m2pe2</stringProp>
              <stringProp name="Argument.value">perf32_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe3" elementType="Argument">
              <stringProp name="Argument.name">m2pe3</stringProp>
              <stringProp name="Argument.value">perf32_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe4" elementType="Argument">
              <stringProp name="Argument.name">m2pe4</stringProp>
              <stringProp name="Argument.value">perf32_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe5" elementType="Argument">
              <stringProp name="Argument.name">m2pe5</stringProp>
              <stringProp name="Argument.value">perf32_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe6" elementType="Argument">
              <stringProp name="Argument.name">m2pe6</stringProp>
              <stringProp name="Argument.value">perf32_400lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe7" elementType="Argument">
              <stringProp name="Argument.name">m2pe7</stringProp>
              <stringProp name="Argument.value">perf32_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe8" elementType="Argument">
              <stringProp name="Argument.name">m2pe8</stringProp>
              <stringProp name="Argument.value">perf33_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe9" elementType="Argument">
              <stringProp name="Argument.name">m2pe9</stringProp>
              <stringProp name="Argument.value">perf33_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe10" elementType="Argument">
              <stringProp name="Argument.name">m2pe10</stringProp>
              <stringProp name="Argument.value">perf33_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe11" elementType="Argument">
              <stringProp name="Argument.name">m2pe11</stringProp>
              <stringProp name="Argument.value">perf34_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe1" elementType="Argument">
              <stringProp name="Argument.name">m3pe1</stringProp>
              <stringProp name="Argument.value">perf33_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe2" elementType="Argument">
              <stringProp name="Argument.name">m3pe2</stringProp>
              <stringProp name="Argument.value">perf33_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe3" elementType="Argument">
              <stringProp name="Argument.name">m3pe3</stringProp>
              <stringProp name="Argument.value">perf33_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe4" elementType="Argument">
              <stringProp name="Argument.name">m3pe4</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe5" elementType="Argument">
              <stringProp name="Argument.name">m3pe5</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe1" elementType="Argument">
              <stringProp name="Argument.name">m4pe1</stringProp>
              <stringProp name="Argument.value">perf32_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe2" elementType="Argument">
              <stringProp name="Argument.name">m4pe2</stringProp>
              <stringProp name="Argument.value">perf32_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe3" elementType="Argument">
              <stringProp name="Argument.name">m4pe3</stringProp>
              <stringProp name="Argument.value">perf32_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe4" elementType="Argument">
              <stringProp name="Argument.name">m4pe4</stringProp>
              <stringProp name="Argument.value">perf32_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe5" elementType="Argument">
              <stringProp name="Argument.name">m4pe5</stringProp>
              <stringProp name="Argument.value">perf32_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe6" elementType="Argument">
              <stringProp name="Argument.name">m4pe6</stringProp>
              <stringProp name="Argument.value">perf32_400lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe7" elementType="Argument">
              <stringProp name="Argument.name">m4pe7</stringProp>
              <stringProp name="Argument.value">perf32_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe8" elementType="Argument">
              <stringProp name="Argument.name">m4pe8</stringProp>
              <stringProp name="Argument.value">perf33_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe9" elementType="Argument">
              <stringProp name="Argument.name">m4pe9</stringProp>
              <stringProp name="Argument.value">perf33_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe10" elementType="Argument">
              <stringProp name="Argument.name">m4pe10</stringProp>
              <stringProp name="Argument.value">perf33_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe11" elementType="Argument">
              <stringProp name="Argument.name">m4pe11</stringProp>
              <stringProp name="Argument.value">perf34_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe12" elementType="Argument">
              <stringProp name="Argument.name">m4pe12</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe13" elementType="Argument">
              <stringProp name="Argument.name">m4pe13</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe1" elementType="Argument">
              <stringProp name="Argument.name">h1pe1</stringProp>
              <stringProp name="Argument.value">perf35_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe2" elementType="Argument">
              <stringProp name="Argument.name">h1pe2</stringProp>
              <stringProp name="Argument.value">perf35_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe3" elementType="Argument">
              <stringProp name="Argument.name">h1pe3</stringProp>
              <stringProp name="Argument.value">perf35_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe4" elementType="Argument">
              <stringProp name="Argument.name">h1pe4</stringProp>
              <stringProp name="Argument.value">perf36_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe5" elementType="Argument">
              <stringProp name="Argument.name">h1pe5</stringProp>
              <stringProp name="Argument.value">perf36_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe6" elementType="Argument">
              <stringProp name="Argument.name">h1pe6</stringProp>
              <stringProp name="Argument.value">perf36_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe7" elementType="Argument">
              <stringProp name="Argument.name">h1pe7</stringProp>
              <stringProp name="Argument.value">perf36_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe1" elementType="Argument">
              <stringProp name="Argument.name">h2pe1</stringProp>
              <stringProp name="Argument.value">perf36_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe2" elementType="Argument">
              <stringProp name="Argument.name">h2pe2</stringProp>
              <stringProp name="Argument.value">perf36_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe3" elementType="Argument">
              <stringProp name="Argument.name">h2pe3</stringProp>
              <stringProp name="Argument.value">perf36_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe4" elementType="Argument">
              <stringProp name="Argument.name">h2pe4</stringProp>
              <stringProp name="Argument.value">perf36_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe5" elementType="Argument">
              <stringProp name="Argument.name">h2pe5</stringProp>
              <stringProp name="Argument.value">perf37_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe6" elementType="Argument">
              <stringProp name="Argument.name">h2pe6</stringProp>
              <stringProp name="Argument.value">perf37_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe7" elementType="Argument">
              <stringProp name="Argument.name">h2pe7</stringProp>
              <stringProp name="Argument.value">perf37_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe8" elementType="Argument">
              <stringProp name="Argument.name">h2pe8</stringProp>
              <stringProp name="Argument.value">perf37_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe9" elementType="Argument">
              <stringProp name="Argument.name">h2pe9</stringProp>
              <stringProp name="Argument.value">perf37_400lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe10" elementType="Argument">
              <stringProp name="Argument.name">h2pe10</stringProp>
              <stringProp name="Argument.value">perf37_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe11" elementType="Argument">
              <stringProp name="Argument.name">h2pe11</stringProp>
              <stringProp name="Argument.value">perf37_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe12" elementType="Argument">
              <stringProp name="Argument.name">h2pe12</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe13" elementType="Argument">
              <stringProp name="Argument.name">h2pe13</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe14" elementType="Argument">
              <stringProp name="Argument.name">h2pe14</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe15" elementType="Argument">
              <stringProp name="Argument.name">h2pe15</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe16" elementType="Argument">
              <stringProp name="Argument.name">h2pe16</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe17" elementType="Argument">
              <stringProp name="Argument.name">h2pe17</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe1" elementType="Argument">
              <stringProp name="Argument.name">h3pe1</stringProp>
              <stringProp name="Argument.value">perf35_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe2" elementType="Argument">
              <stringProp name="Argument.name">h3pe2</stringProp>
              <stringProp name="Argument.value">perf35_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe3" elementType="Argument">
              <stringProp name="Argument.name">h3pe3</stringProp>
              <stringProp name="Argument.value">perf35_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe4" elementType="Argument">
              <stringProp name="Argument.name">h3pe4</stringProp>
              <stringProp name="Argument.value">perf33_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe5" elementType="Argument">
              <stringProp name="Argument.name">h3pe5</stringProp>
              <stringProp name="Argument.value">perf33_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe6" elementType="Argument">
              <stringProp name="Argument.name">h3pe6</stringProp>
              <stringProp name="Argument.value">perf33_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe7" elementType="Argument">
              <stringProp name="Argument.name">h3pe7</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe8" elementType="Argument">
              <stringProp name="Argument.name">h3pe8</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe9" elementType="Argument">
              <stringProp name="Argument.name">h3pe9</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe1" elementType="Argument">
              <stringProp name="Argument.name">h4pe1</stringProp>
              <stringProp name="Argument.value">perf35_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe2" elementType="Argument">
              <stringProp name="Argument.name">h4pe2</stringProp>
              <stringProp name="Argument.value">perf35_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe3" elementType="Argument">
              <stringProp name="Argument.name">h4pe3</stringProp>
              <stringProp name="Argument.value">perf35_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe4" elementType="Argument">
              <stringProp name="Argument.name">h4pe4</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe5" elementType="Argument">
              <stringProp name="Argument.name">h4pe5</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe6" elementType="Argument">
              <stringProp name="Argument.name">h4pe6</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe7" elementType="Argument">
              <stringProp name="Argument.name">h4pe7</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe8" elementType="Argument">
              <stringProp name="Argument.name">h4pe8</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe9" elementType="Argument">
              <stringProp name="Argument.name">h4pe9</stringProp>
              <stringProp name="Argument.value">perf40_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe10" elementType="Argument">
              <stringProp name="Argument.name">h4pe10</stringProp>
              <stringProp name="Argument.value">perf40_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - 1" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="l1pe1" elementType="Argument">
              <stringProp name="Argument.name">l1pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l1pe2" elementType="Argument">
              <stringProp name="Argument.name">l1pe2</stringProp>
              <stringProp name="Argument.value">perf30_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l1pe3" elementType="Argument">
              <stringProp name="Argument.name">l1pe3</stringProp>
              <stringProp name="Argument.value">perf30_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l1pe4" elementType="Argument">
              <stringProp name="Argument.name">l1pe4</stringProp>
              <stringProp name="Argument.value">perf30_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe1" elementType="Argument">
              <stringProp name="Argument.name">l2pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe2" elementType="Argument">
              <stringProp name="Argument.name">l2pe2</stringProp>
              <stringProp name="Argument.value">perf30_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe3" elementType="Argument">
              <stringProp name="Argument.name">l2pe3</stringProp>
              <stringProp name="Argument.value">perf30_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe4" elementType="Argument">
              <stringProp name="Argument.name">l2pe4</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe5" elementType="Argument">
              <stringProp name="Argument.name">l2pe5</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l2pe6" elementType="Argument">
              <stringProp name="Argument.name">l2pe6</stringProp>
              <stringProp name="Argument.value">perf30_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe1" elementType="Argument">
              <stringProp name="Argument.name">l3pe1</stringProp>
              <stringProp name="Argument.value">perf29_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe2" elementType="Argument">
              <stringProp name="Argument.name">l3pe2</stringProp>
              <stringProp name="Argument.value">perf29_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe3" elementType="Argument">
              <stringProp name="Argument.name">l3pe3</stringProp>
              <stringProp name="Argument.value">perf29_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe4" elementType="Argument">
              <stringProp name="Argument.name">l3pe4</stringProp>
              <stringProp name="Argument.value">perf29_300lo_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe5" elementType="Argument">
              <stringProp name="Argument.name">l3pe5</stringProp>
              <stringProp name="Argument.value">perf31_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe6" elementType="Argument">
              <stringProp name="Argument.name">l3pe6</stringProp>
              <stringProp name="Argument.value">perf31_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe7" elementType="Argument">
              <stringProp name="Argument.name">l3pe7</stringProp>
              <stringProp name="Argument.value">perf31_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe8" elementType="Argument">
              <stringProp name="Argument.name">l3pe8</stringProp>
              <stringProp name="Argument.value">perf29_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe9" elementType="Argument">
              <stringProp name="Argument.name">l3pe9</stringProp>
              <stringProp name="Argument.value">perf29_100lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l3pe10" elementType="Argument">
              <stringProp name="Argument.name">l3pe10</stringProp>
              <stringProp name="Argument.value">perf31_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe1" elementType="Argument">
              <stringProp name="Argument.name">l4pe1</stringProp>
              <stringProp name="Argument.value">perf29_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe2" elementType="Argument">
              <stringProp name="Argument.name">l4pe2</stringProp>
              <stringProp name="Argument.value">perf29_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe3" elementType="Argument">
              <stringProp name="Argument.name">l4pe3</stringProp>
              <stringProp name="Argument.value">perf29_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe4" elementType="Argument">
              <stringProp name="Argument.name">l4pe4</stringProp>
              <stringProp name="Argument.value">perf29_300lo_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe5" elementType="Argument">
              <stringProp name="Argument.name">l4pe5</stringProp>
              <stringProp name="Argument.value">perf31_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe6" elementType="Argument">
              <stringProp name="Argument.name">l4pe6</stringProp>
              <stringProp name="Argument.value">perf31_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe7" elementType="Argument">
              <stringProp name="Argument.name">l4pe7</stringProp>
              <stringProp name="Argument.value">perf31_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe8" elementType="Argument">
              <stringProp name="Argument.name">l4pe8</stringProp>
              <stringProp name="Argument.value">perf29_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe9" elementType="Argument">
              <stringProp name="Argument.name">l4pe9</stringProp>
              <stringProp name="Argument.value">perf29_100lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l4pe10" elementType="Argument">
              <stringProp name="Argument.name">l4pe10</stringProp>
              <stringProp name="Argument.value">perf31_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe1" elementType="Argument">
              <stringProp name="Argument.name">l5pe1</stringProp>
              <stringProp name="Argument.value">perf29_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe2" elementType="Argument">
              <stringProp name="Argument.name">l5pe2</stringProp>
              <stringProp name="Argument.value">perf29_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe3" elementType="Argument">
              <stringProp name="Argument.name">l5pe3</stringProp>
              <stringProp name="Argument.value">perf29_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe4" elementType="Argument">
              <stringProp name="Argument.name">l5pe4</stringProp>
              <stringProp name="Argument.value">perf29_300lo_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe5" elementType="Argument">
              <stringProp name="Argument.name">l5pe5</stringProp>
              <stringProp name="Argument.value">perf31_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe6" elementType="Argument">
              <stringProp name="Argument.name">l5pe6</stringProp>
              <stringProp name="Argument.value">perf31_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe7" elementType="Argument">
              <stringProp name="Argument.name">l5pe7</stringProp>
              <stringProp name="Argument.value">perf31_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe8" elementType="Argument">
              <stringProp name="Argument.name">l5pe8</stringProp>
              <stringProp name="Argument.value">perf29_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe9" elementType="Argument">
              <stringProp name="Argument.name">l5pe9</stringProp>
              <stringProp name="Argument.value">perf29_100lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l5pe10" elementType="Argument">
              <stringProp name="Argument.name">l5pe10</stringProp>
              <stringProp name="Argument.value">perf31_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l6pe1" elementType="Argument">
              <stringProp name="Argument.name">l6pe1</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l6pe2" elementType="Argument">
              <stringProp name="Argument.name">l6pe2</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l6pe3" elementType="Argument">
              <stringProp name="Argument.name">l6pe3</stringProp>
              <stringProp name="Argument.value">perfb2pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l6pe4" elementType="Argument">
              <stringProp name="Argument.name">l6pe4</stringProp>
              <stringProp name="Argument.value">perfb2pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe1" elementType="Argument">
              <stringProp name="Argument.name">m1pe1</stringProp>
              <stringProp name="Argument.value">perf32_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe2" elementType="Argument">
              <stringProp name="Argument.name">m1pe2</stringProp>
              <stringProp name="Argument.value">perf32_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe3" elementType="Argument">
              <stringProp name="Argument.name">m1pe3</stringProp>
              <stringProp name="Argument.value">perf32_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe4" elementType="Argument">
              <stringProp name="Argument.name">m1pe4</stringProp>
              <stringProp name="Argument.value">perf32_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe5" elementType="Argument">
              <stringProp name="Argument.name">m1pe5</stringProp>
              <stringProp name="Argument.value">perf32_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe6" elementType="Argument">
              <stringProp name="Argument.name">m1pe6</stringProp>
              <stringProp name="Argument.value">perf32_400lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe7" elementType="Argument">
              <stringProp name="Argument.name">m1pe7</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe8" elementType="Argument">
              <stringProp name="Argument.name">m1pe8</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe9" elementType="Argument">
              <stringProp name="Argument.name">m1pe9</stringProp>
              <stringProp name="Argument.value">perf39_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe10" elementType="Argument">
              <stringProp name="Argument.name">m1pe10</stringProp>
              <stringProp name="Argument.value">perf39_100lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m1pe11" elementType="Argument">
              <stringProp name="Argument.name">m1pe11</stringProp>
              <stringProp name="Argument.value">perf32_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe1" elementType="Argument">
              <stringProp name="Argument.name">m2pe1</stringProp>
              <stringProp name="Argument.value">perf32_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe2" elementType="Argument">
              <stringProp name="Argument.name">m2pe2</stringProp>
              <stringProp name="Argument.value">perf32_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe3" elementType="Argument">
              <stringProp name="Argument.name">m2pe3</stringProp>
              <stringProp name="Argument.value">perf32_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe4" elementType="Argument">
              <stringProp name="Argument.name">m2pe4</stringProp>
              <stringProp name="Argument.value">perf32_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe5" elementType="Argument">
              <stringProp name="Argument.name">m2pe5</stringProp>
              <stringProp name="Argument.value">perf32_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe6" elementType="Argument">
              <stringProp name="Argument.name">m2pe6</stringProp>
              <stringProp name="Argument.value">perf32_400lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe7" elementType="Argument">
              <stringProp name="Argument.name">m2pe7</stringProp>
              <stringProp name="Argument.value">perf33_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe8" elementType="Argument">
              <stringProp name="Argument.name">m2pe8</stringProp>
              <stringProp name="Argument.value">perf33_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe9" elementType="Argument">
              <stringProp name="Argument.name">m2pe9</stringProp>
              <stringProp name="Argument.value">perf33_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe10" elementType="Argument">
              <stringProp name="Argument.name">m2pe10</stringProp>
              <stringProp name="Argument.value">perf34_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m2pe11" elementType="Argument">
              <stringProp name="Argument.name">m2pe11</stringProp>
              <stringProp name="Argument.value">perf32_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe1" elementType="Argument">
              <stringProp name="Argument.name">m3pe1</stringProp>
              <stringProp name="Argument.value">perf33_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe2" elementType="Argument">
              <stringProp name="Argument.name">m3pe2</stringProp>
              <stringProp name="Argument.value">perf33_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe3" elementType="Argument">
              <stringProp name="Argument.name">m3pe3</stringProp>
              <stringProp name="Argument.value">perf33_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe4" elementType="Argument">
              <stringProp name="Argument.name">m3pe4</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m3pe5" elementType="Argument">
              <stringProp name="Argument.name">m3pe5</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe1" elementType="Argument">
              <stringProp name="Argument.name">m4pe1</stringProp>
              <stringProp name="Argument.value">perf32_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe2" elementType="Argument">
              <stringProp name="Argument.name">m4pe2</stringProp>
              <stringProp name="Argument.value">perf32_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe3" elementType="Argument">
              <stringProp name="Argument.name">m4pe3</stringProp>
              <stringProp name="Argument.value">perf32_300lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe4" elementType="Argument">
              <stringProp name="Argument.name">m4pe4</stringProp>
              <stringProp name="Argument.value">perf32_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe5" elementType="Argument">
              <stringProp name="Argument.name">m4pe5</stringProp>
              <stringProp name="Argument.value">perf32_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe6" elementType="Argument">
              <stringProp name="Argument.name">m4pe6</stringProp>
              <stringProp name="Argument.value">perf32_400lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe7" elementType="Argument">
              <stringProp name="Argument.name">m4pe7</stringProp>
              <stringProp name="Argument.value">perf33_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe8" elementType="Argument">
              <stringProp name="Argument.name">m4pe8</stringProp>
              <stringProp name="Argument.value">perf33_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe9" elementType="Argument">
              <stringProp name="Argument.name">m4pe9</stringProp>
              <stringProp name="Argument.value">perf33_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe10" elementType="Argument">
              <stringProp name="Argument.name">m4pe10</stringProp>
              <stringProp name="Argument.value">perf34_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe11" elementType="Argument">
              <stringProp name="Argument.name">m4pe11</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe12" elementType="Argument">
              <stringProp name="Argument.name">m4pe12</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m4pe13" elementType="Argument">
              <stringProp name="Argument.name">m4pe13</stringProp>
              <stringProp name="Argument.value">perf32_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe1" elementType="Argument">
              <stringProp name="Argument.name">h1pe1</stringProp>
              <stringProp name="Argument.value">perf35_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe2" elementType="Argument">
              <stringProp name="Argument.name">h1pe2</stringProp>
              <stringProp name="Argument.value">perf35_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe3" elementType="Argument">
              <stringProp name="Argument.name">h1pe3</stringProp>
              <stringProp name="Argument.value">perf36_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe4" elementType="Argument">
              <stringProp name="Argument.name">h1pe4</stringProp>
              <stringProp name="Argument.value">perf36_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe5" elementType="Argument">
              <stringProp name="Argument.name">h1pe5</stringProp>
              <stringProp name="Argument.value">perf36_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe6" elementType="Argument">
              <stringProp name="Argument.name">h1pe6</stringProp>
              <stringProp name="Argument.value">perf36_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h1pe7" elementType="Argument">
              <stringProp name="Argument.name">h1pe7</stringProp>
              <stringProp name="Argument.value">perf35_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe1" elementType="Argument">
              <stringProp name="Argument.name">h2pe1</stringProp>
              <stringProp name="Argument.value">perf36_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe2" elementType="Argument">
              <stringProp name="Argument.name">h2pe2</stringProp>
              <stringProp name="Argument.value">perf36_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe3" elementType="Argument">
              <stringProp name="Argument.name">h2pe3</stringProp>
              <stringProp name="Argument.value">perf36_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe4" elementType="Argument">
              <stringProp name="Argument.name">h2pe4</stringProp>
              <stringProp name="Argument.value">perf36_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe5" elementType="Argument">
              <stringProp name="Argument.name">h2pe5</stringProp>
              <stringProp name="Argument.value">perf37_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe6" elementType="Argument">
              <stringProp name="Argument.name">h2pe6</stringProp>
              <stringProp name="Argument.value">perf37_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe7" elementType="Argument">
              <stringProp name="Argument.name">h2pe7</stringProp>
              <stringProp name="Argument.value">perf37_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe8" elementType="Argument">
              <stringProp name="Argument.name">h2pe8</stringProp>
              <stringProp name="Argument.value">perf37_400lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe9" elementType="Argument">
              <stringProp name="Argument.name">h2pe9</stringProp>
              <stringProp name="Argument.value">perf37_400lo_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe10" elementType="Argument">
              <stringProp name="Argument.name">h2pe10</stringProp>
              <stringProp name="Argument.value">perf37_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe11" elementType="Argument">
              <stringProp name="Argument.name">h2pe11</stringProp>
              <stringProp name="Argument.value">perf37_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe12" elementType="Argument">
              <stringProp name="Argument.name">h2pe12</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe13" elementType="Argument">
              <stringProp name="Argument.name">h2pe13</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe14" elementType="Argument">
              <stringProp name="Argument.name">h2pe14</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe15" elementType="Argument">
              <stringProp name="Argument.name">h2pe15</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe16" elementType="Argument">
              <stringProp name="Argument.name">h2pe16</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h2pe17" elementType="Argument">
              <stringProp name="Argument.name">h2pe17</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe1" elementType="Argument">
              <stringProp name="Argument.name">h3pe1</stringProp>
              <stringProp name="Argument.value">perf35_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe2" elementType="Argument">
              <stringProp name="Argument.name">h3pe2</stringProp>
              <stringProp name="Argument.value">perf35_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe3" elementType="Argument">
              <stringProp name="Argument.name">h3pe3</stringProp>
              <stringProp name="Argument.value">perf33_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe4" elementType="Argument">
              <stringProp name="Argument.name">h3pe4</stringProp>
              <stringProp name="Argument.value">perf33_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe5" elementType="Argument">
              <stringProp name="Argument.name">h3pe5</stringProp>
              <stringProp name="Argument.value">perf33_500lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe6" elementType="Argument">
              <stringProp name="Argument.name">h3pe6</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe7" elementType="Argument">
              <stringProp name="Argument.name">h3pe7</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe8" elementType="Argument">
              <stringProp name="Argument.name">h3pe8</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h3pe9" elementType="Argument">
              <stringProp name="Argument.name">h3pe9</stringProp>
              <stringProp name="Argument.value">perf35_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe1" elementType="Argument">
              <stringProp name="Argument.name">h4pe1</stringProp>
              <stringProp name="Argument.value">perf35_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe2" elementType="Argument">
              <stringProp name="Argument.name">h4pe2</stringProp>
              <stringProp name="Argument.value">perf35_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe3" elementType="Argument">
              <stringProp name="Argument.name">h4pe3</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe4" elementType="Argument">
              <stringProp name="Argument.name">h4pe4</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe5" elementType="Argument">
              <stringProp name="Argument.name">h4pe5</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe6" elementType="Argument">
              <stringProp name="Argument.name">h4pe6</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe7" elementType="Argument">
              <stringProp name="Argument.name">h4pe7</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe8" elementType="Argument">
              <stringProp name="Argument.name">h4pe8</stringProp>
              <stringProp name="Argument.value">perf40_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe9" elementType="Argument">
              <stringProp name="Argument.name">h4pe9</stringProp>
              <stringProp name="Argument.value">perf40_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h4pe10" elementType="Argument">
              <stringProp name="Argument.name">h4pe10</stringProp>
              <stringProp name="Argument.value">perf35_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m5pe1" elementType="Argument">
              <stringProp name="Argument.name">m5pe1</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m5pe2" elementType="Argument">
              <stringProp name="Argument.name">m5pe2</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m5pe3" elementType="Argument">
              <stringProp name="Argument.name">m5pe3</stringProp>
              <stringProp name="Argument.value">perf41_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="m5pe4" elementType="Argument">
              <stringProp name="Argument.name">m5pe4</stringProp>
              <stringProp name="Argument.value">perf41_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h5pe1" elementType="Argument">
              <stringProp name="Argument.name">h5pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h5pe2" elementType="Argument">
              <stringProp name="Argument.name">h5pe2</stringProp>
              <stringProp name="Argument.value">perf41_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h5pe3" elementType="Argument">
              <stringProp name="Argument.name">h5pe3</stringProp>
              <stringProp name="Argument.value">perf41_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h5pe4" elementType="Argument">
              <stringProp name="Argument.name">h5pe4</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h5pe5" elementType="Argument">
              <stringProp name="Argument.name">h5pe5</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h5pe6" elementType="Argument">
              <stringProp name="Argument.name">h5pe6</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h5pe7" elementType="Argument">
              <stringProp name="Argument.name">h5pe7</stringProp>
              <stringProp name="Argument.value">perf34_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe1" elementType="Argument">
              <stringProp name="Argument.name">h6pe1</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe2" elementType="Argument">
              <stringProp name="Argument.name">h6pe2</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe3" elementType="Argument">
              <stringProp name="Argument.name">h6pe3</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe4" elementType="Argument">
              <stringProp name="Argument.name">h6pe4</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe5" elementType="Argument">
              <stringProp name="Argument.name">h6pe5</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe6" elementType="Argument">
              <stringProp name="Argument.name">h6pe6</stringProp>
              <stringProp name="Argument.value">perf40_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe7" elementType="Argument">
              <stringProp name="Argument.name">h6pe7</stringProp>
              <stringProp name="Argument.value">perf40_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe8" elementType="Argument">
              <stringProp name="Argument.name">h6pe8</stringProp>
              <stringProp name="Argument.value">perf35_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe9" elementType="Argument">
              <stringProp name="Argument.name">h6pe9</stringProp>
              <stringProp name="Argument.value">perf35_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h6pe10" elementType="Argument">
              <stringProp name="Argument.name">h6pe10</stringProp>
              <stringProp name="Argument.value">perf35_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l7pe1" elementType="Argument">
              <stringProp name="Argument.name">l7pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l7pe2" elementType="Argument">
              <stringProp name="Argument.name">l7pe2</stringProp>
              <stringProp name="Argument.value">perf30_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l7pe3" elementType="Argument">
              <stringProp name="Argument.name">l7pe3</stringProp>
              <stringProp name="Argument.value">perf30_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l7pe4" elementType="Argument">
              <stringProp name="Argument.name">l7pe4</stringProp>
              <stringProp name="Argument.value">perf30_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l8pe1" elementType="Argument">
              <stringProp name="Argument.name">l8pe1</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l8pe2" elementType="Argument">
              <stringProp name="Argument.name">l8pe2</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l8pe3" elementType="Argument">
              <stringProp name="Argument.name">l8pe3</stringProp>
              <stringProp name="Argument.value">perfb2pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l8pe4" elementType="Argument">
              <stringProp name="Argument.name">l8pe4</stringProp>
              <stringProp name="Argument.value">perfb2pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l9pe1" elementType="Argument">
              <stringProp name="Argument.name">l9pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l9pe2" elementType="Argument">
              <stringProp name="Argument.name">l9pe2</stringProp>
              <stringProp name="Argument.value">perf30_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l9pe3" elementType="Argument">
              <stringProp name="Argument.name">l9pe3</stringProp>
              <stringProp name="Argument.value">perf30_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l9pe4" elementType="Argument">
              <stringProp name="Argument.name">l9pe4</stringProp>
              <stringProp name="Argument.value">perf30_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l10pe1" elementType="Argument">
              <stringProp name="Argument.name">l10pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l10pe2" elementType="Argument">
              <stringProp name="Argument.name">l10pe2</stringProp>
              <stringProp name="Argument.value">perf30_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l10pe3" elementType="Argument">
              <stringProp name="Argument.name">l10pe3</stringProp>
              <stringProp name="Argument.value">perf30_300lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l10pe4" elementType="Argument">
              <stringProp name="Argument.name">l10pe4</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l10pe5" elementType="Argument">
              <stringProp name="Argument.name">l10pe5</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l10pe6" elementType="Argument">
              <stringProp name="Argument.name">l10pe6</stringProp>
              <stringProp name="Argument.value">perf30_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="l10pe7" elementType="Argument">
              <stringProp name="Argument.name">l10pe7</stringProp>
              <stringProp name="Argument.value">perfprodct11</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe1" elementType="Argument">
              <stringProp name="Argument.name">h7pe1</stringProp>
              <stringProp name="Argument.value">perf35_400lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe2" elementType="Argument">
              <stringProp name="Argument.name">h7pe2</stringProp>
              <stringProp name="Argument.value">perf35_500lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe3" elementType="Argument">
              <stringProp name="Argument.name">h7pe3</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe4" elementType="Argument">
              <stringProp name="Argument.name">h7pe4</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe5" elementType="Argument">
              <stringProp name="Argument.name">h7pe5</stringProp>
              <stringProp name="Argument.value">perf38_300lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe6" elementType="Argument">
              <stringProp name="Argument.name">h7pe6</stringProp>
              <stringProp name="Argument.value">perf38_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe7" elementType="Argument">
              <stringProp name="Argument.name">h7pe7</stringProp>
              <stringProp name="Argument.value">perf38_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe8" elementType="Argument">
              <stringProp name="Argument.name">h7pe8</stringProp>
              <stringProp name="Argument.value">perf40_630lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe9" elementType="Argument">
              <stringProp name="Argument.name">h7pe9</stringProp>
              <stringProp name="Argument.value">perf40_630lo_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="h7pe10" elementType="Argument">
              <stringProp name="Argument.name">h7pe10</stringProp>
              <stringProp name="Argument.value">perf35_100lo_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - School Entitlement - StdCat" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="StdCat2_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test3-alpha&quot;,&quot;perf-test4-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat2_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;NPJ-EYC-YCM&quot;,&quot;TXQ-WEQ-LHR&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test3-alpha&quot;,&quot;perf-test4-alpha&quot;,&quot;perf-test5-alpha&quot;,&quot;perf-test6-alpha&quot;,&quot;perf-test7-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;NPJ-EYC-YCM&quot;,&quot;TXQ-WEQ-LHR&quot;,&quot;PFG-VAW-KQD&quot;,&quot;MQZ-JKE-TKE&quot;,&quot;ZDG-AGK-GND&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test8-alpha&quot;,&quot;perf-test9-alpha&quot;,&quot;perf-test10-alpha&quot;,&quot;perf-test11-alpha&quot;,&quot;perf-test12-alpha&quot;,&quot;perf-test13-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;BNH-VYJ-HKE&quot;,&quot;YTB-LTC-EAL&quot;,&quot;CJG-BDQ-DYD&quot;,&quot;QCV-HJU-YWJ&quot;,&quot;RED-YGL-QYG&quot;,&quot;VEC-JCP-JCB&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test8-alpha&quot;,&quot;perf-test9-alpha&quot;,&quot;perf-test10-alpha&quot;,&quot;perf-test11-alpha&quot;,&quot;perf-test12-alpha&quot;,&quot;perf-test13-alpha&quot;,&quot;perf-test14-alpha&quot;,&quot;perf-test15-alpha&quot;,&quot;perf-test16-alpha&quot;,&quot;perf-test17-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;BNH-VYJ-HKE&quot;,&quot;YTB-LTC-EAL&quot;,&quot;CJG-BDQ-DYD&quot;,&quot;QCV-HJU-YWJ&quot;,&quot;RED-YGL-QYG&quot;,&quot;VEC-JCP-JCB&quot;,&quot;GHP-QYC-FMZ&quot;,&quot;MFN-DYW-KCV&quot;,&quot;WKV-QPC-RDC&quot;,&quot;LRY-MRN-YDT&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat2_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test3-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat2_orgId2" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_orgId2</stringProp>
              <stringProp name="Argument.value">perf-test4-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test3-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_orgId2" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_orgId2</stringProp>
              <stringProp name="Argument.value">perf-test4-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_orgId3" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_orgId3</stringProp>
              <stringProp name="Argument.value">perf-test5-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_orgId4" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_orgId4</stringProp>
              <stringProp name="Argument.value">perf-test6-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_orgId5" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_orgId5</stringProp>
              <stringProp name="Argument.value">perf-test7-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test8-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgId2" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgId2</stringProp>
              <stringProp name="Argument.value">perf-test9-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgId3" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgId3</stringProp>
              <stringProp name="Argument.value">perf-test10-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgId4" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgId4</stringProp>
              <stringProp name="Argument.value">perf-test11-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgId5" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgId5</stringProp>
              <stringProp name="Argument.value">perf-test12-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgId6" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgId6</stringProp>
              <stringProp name="Argument.value">perf-test13-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test8-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId2" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId2</stringProp>
              <stringProp name="Argument.value">perf-test9-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId3" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId3</stringProp>
              <stringProp name="Argument.value">perf-test10-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId4" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId4</stringProp>
              <stringProp name="Argument.value">perf-test11-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId5" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId5</stringProp>
              <stringProp name="Argument.value">perf-test12-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId6" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId6</stringProp>
              <stringProp name="Argument.value">perf-test13-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId7" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId7</stringProp>
              <stringProp name="Argument.value">perf-test14-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId8" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId8</stringProp>
              <stringProp name="Argument.value">perf-test15-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId9" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId9</stringProp>
              <stringProp name="Argument.value">perf-test16-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId10" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId10</stringProp>
              <stringProp name="Argument.value">perf-test17-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat2_orgCount" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_orgCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_orgCount" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_orgCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgCount" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgCount" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - School Entitlement - School Product Code" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="perf-test3-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test3-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test3-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test3-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test4-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test4-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test4-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test4-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test5-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test5-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test5-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test5-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot; </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot; </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot; </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;  </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot; </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test3-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test3-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;NPJ-EYC-YCM&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test4-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test4-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;TXQ-WEQ-LHR&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test5-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test5-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;PFG-VAW-KQD&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;MQZ-JKE-TKE&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;ZDG-AGK-GND&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;BNH-VYJ-HKE&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;YTB-LTC-EAL&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;CJG-BDQ-DYD&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;QCV-HJU-YWJ&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;RED-YGL-QYG&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;VEC-JCP-JCB&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;GHP-QYC-FMZ&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;MFN-DYW-KCV&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;WKV-QPC-RDC&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;LRY-MRN-YDT&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - School Entitlement - School Product Code List" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="perf-test3-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test3-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test4-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test4-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test5-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test5-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE7" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE7</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE8" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE8</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE9" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE9</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PE10" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PE10</stringProp>
              <stringProp name="Argument.value">perfprod111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE7" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE7</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE8" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE8</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE9" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE9</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PE10" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PE10</stringProp>
              <stringProp name="Argument.value">perfprod111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE7" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE7</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE8" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE8</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE9" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE9</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PE10" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PE10</stringProp>
              <stringProp name="Argument.value">perfprod111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE7" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE7</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE8" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE8</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE9" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE9</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PE10" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PE10</stringProp>
              <stringProp name="Argument.value">perfprod111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE1" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE1</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE2" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE2</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE3" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE4" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE4</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE5" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE5</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE6" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE6</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE7" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE7</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE8" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE8</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE9" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE9</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PE10" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PE10</stringProp>
              <stringProp name="Argument.value">perfprod111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - School Entitlement - 1011_SE details" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="StdCat2_1011_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_1011_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test3-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat2_1011_productcode" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_1011_productcode</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_1011_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_1011_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test6-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_1011_productcode" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_1011_productcode</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_1011_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_1011_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test13-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_1011_productcode" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_1011_productcode</stringProp>
              <stringProp name="Argument.value">perfprod111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1011_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1011_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test17-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1011_productcode" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1011_productcode</stringProp>
              <stringProp name="Argument.value">perfprod111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - School Entitlement - 1009_SE details" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="StdCat2_1009_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_1009_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test4-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat2_1009_orgId2" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_1009_orgId2</stringProp>
              <stringProp name="Argument.value">perf-test3-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_1009_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_1009_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test4-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_1009_orgId2" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_1009_orgId2</stringProp>
              <stringProp name="Argument.value">perf-test3-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_1009_orgId3" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_1009_orgId3</stringProp>
              <stringProp name="Argument.value">perf-test5-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_1009_orgId4" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_1009_orgId4</stringProp>
              <stringProp name="Argument.value">perf-test6-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_1009_orgId5" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_1009_orgId5</stringProp>
              <stringProp name="Argument.value">perf-test7-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_1009_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_1009_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test9-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_1009_orgId2" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_1009_orgId2</stringProp>
              <stringProp name="Argument.value">perf-test8-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_1009_orgId3" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_1009_orgId3</stringProp>
              <stringProp name="Argument.value">perf-test10-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_1009_orgId4" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_1009_orgId4</stringProp>
              <stringProp name="Argument.value">perf-test11-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_1009_orgId5" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_1009_orgId5</stringProp>
              <stringProp name="Argument.value">perf-test12-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_1009_orgId6" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_1009_orgId6</stringProp>
              <stringProp name="Argument.value">perf-test13-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId1" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId1</stringProp>
              <stringProp name="Argument.value">perf-test9-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId2" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId2</stringProp>
              <stringProp name="Argument.value">perf-test8-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId3" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId3</stringProp>
              <stringProp name="Argument.value">perf-test10-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId4" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId4</stringProp>
              <stringProp name="Argument.value">perf-test11-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId5" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId5</stringProp>
              <stringProp name="Argument.value">perf-test12-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId6" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId6</stringProp>
              <stringProp name="Argument.value">perf-test13-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId7" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId7</stringProp>
              <stringProp name="Argument.value">perf-test14-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId8" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId8</stringProp>
              <stringProp name="Argument.value">perf-test15-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId9" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId9</stringProp>
              <stringProp name="Argument.value">perf-test16-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_1009_orgId10" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_1009_orgId10</stringProp>
              <stringProp name="Argument.value">perf-test17-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1001: Student registers using a access code (and access default or first time dashboard) - New Users" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">2</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>11.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1001.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">perfprod9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="bundle-code" elementType="Argument">
                <stringProp name="Argument.name">bundle-code</stringProp>
                <stringProp name="Argument.value">perf_bundle_19</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_no_spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Invitation by Email" enabled="true">
              <stringProp name="IncludeController.includepath">Get_invitation_by_email.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_no_spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API to grant authkey on refid" enabled="true">
              <stringProp name="IncludeController.includepath">API_to_grant_authkey_on_refid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
              <stringProp name="IncludeController.includepath">Get_product_by_product_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular bundle" enabled="true">
              <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_no_spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join_Spaces_with_product_code and_class_code_private_1001" enabled="true">
              <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code_private_bundle19_1001.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxWait_1001}</stringProp>
                <stringProp name="RandomTimer.range">${minWait_1001}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_unique.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_classes_of_an_user_noClasses.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">cat2pe</stringProp>
              <stringProp name="ForeachController.returnVal">productcode</stringProp>
              <boolProp name="ForeachController.useSeparator">false</boolProp>
              <stringProp name="ForeachController.startIndex">6</stringProp>
              <stringProp name="ForeachController.endIndex">7</stringProp>
            </ForeachController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_private_1001.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1002: Student registers using a class key &amp; access code  (and access default or first time dashboard) - New Users" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">2</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>2.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1002.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">perfprod9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="bundle-code" elementType="Argument">
                <stringProp name="Argument.name">bundle-code</stringProp>
                <stringProp name="Argument.value">perf_bundle_19</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
              <stringProp name="filename">classcode_1002.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="variableNames">teacherextuserid,classtitle,classcode,category,pe_category,pe_end_index,category_type</stringProp>
              <boolProp name="randomOrder">true</boolProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="rewindOnTheEndOfList">true</boolProp>
              <boolProp name="independentListPerThread">false</boolProp>
            </com.blazemeter.jmeter.RandomCSVDataSetConfig>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_no_spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Invitation by Email" enabled="true">
              <stringProp name="IncludeController.includepath">Get_invitation_by_email.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_no_spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API to grant authkey on refid" enabled="true">
              <stringProp name="IncludeController.includepath">API_to_grant_authkey_on_refid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
              <stringProp name="IncludeController.includepath">Get_product_by_product_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular bundle" enabled="true">
              <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_no_spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Distribution" enabled="true">
              <stringProp name="TestPlan.comments">1009</stringProp>
            </GenericController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
                <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code_private_bundle30.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class and Product Activation" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                    <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class code" enabled="true">
                  <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join spaces with class code" enabled="true">
                  <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class and Product Activation" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                    <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution_unique.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution_no_classes.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                  <stringProp name="ForeachController.returnVal">productcode</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">1</stringProp>
                  <stringProp name="ForeachController.endIndex">2</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                    <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
                <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code_private_bundle32.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class and Product Activation" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                    <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class code" enabled="true">
                  <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join spaces with class code" enabled="true">
                  <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class and Product Activation" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                    <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution_unique.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution_no_classes.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                  <stringProp name="ForeachController.returnVal">productcode</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">0</stringProp>
                  <stringProp name="ForeachController.endIndex">1</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                    <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
                <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code_private_bundle38.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class and Product Activation" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                    <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class code" enabled="true">
                  <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join spaces with class code" enabled="true">
                  <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class and Product Activation" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                    <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution_unique.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution_no_classes.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                  <stringProp name="ForeachController.returnVal">productcode</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">11</stringProp>
                  <stringProp name="ForeachController.endIndex">12</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                    <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High_1" enabled="true">
                <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H_1&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code_private_bundle43.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class and Product Activation" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                    <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class code" enabled="true">
                  <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join spaces with class code" enabled="true">
                  <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class and Product Activation" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                    <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution_unique.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution_no_classes.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                  <stringProp name="ForeachController.returnVal">productcode</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">11</stringProp>
                  <stringProp name="ForeachController.endIndex">12</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                    <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">1002tree.jtl</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1005: Student already present in a class now enrolls into a new class using class key &amp; activates all products of a bundle in that new class - New Users" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>2.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config_student1005_classcode2" enabled="true">
            <stringProp name="filename">classcode2_1005.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">teacherextuserid,classtitle,classcode2,cat</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1005.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,cc,category,pe_category,pe_end_index,category_type</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
            <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Distribution" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
                <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code2.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class Activation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                  <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
                <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code2.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class Activation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                  <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
                <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code2.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class Activation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                  <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - H_1" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H_1&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
                <stringProp name="IncludeController.includepath">Join_Spaces_with_class_specificClass.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Class Activation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
                  <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular Bundle" enabled="true">
                <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle_perfbundle43.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">perfbundle43pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">24</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product_Code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_H_1.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_product_by_product_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular Bundle" enabled="true">
            <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Entitle user with product code" enabled="true">
            <stringProp name="TestPlan.comments">
</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - other categories" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; != &quot;H_1&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat2pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">2</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product_Code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Product Entitlement" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
              <stringProp name="RandomTimer.range">${asyncWait1}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="false">
            <stringProp name="ForeachController.inputVal">cat6pe</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">4</stringProp>
            <stringProp name="TestPlan.comments">This is disabled as duplicate request and also high chances of failure due to queue buildup</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
              <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1005 - Common calls after entilement" enabled="true">
            <stringProp name="IncludeController.includepath">1005-Common_calls_after_entitlement.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1007: Student accesses his profile (My Profile) and updates information" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>5.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="role" elementType="Argument">
                <stringProp name="Argument.name">role</stringProp>
                <stringProp name="Argument.value">${__P(Role,student)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="category" elementType="Argument">
                <stringProp name="Argument.name">category</stringProp>
                <stringProp name="Argument.value">L1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="category_type" elementType="Argument">
                <stringProp name="Argument.name">category_type</stringProp>
                <stringProp name="Argument.value">L</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1007.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,firstname</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Update user information" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Updates the user information in all the spaces" enabled="true">
            <stringProp name="IncludeController.includepath">update_user_information.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1009_SE: Student accesses the learning path of a product as part of a teacher-led class " enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>3.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1009_SE.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,category,category_type,orgid,productcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_1009_SE.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get global entitlements of a user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_unique.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Get org entitlements" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${orgid}&quot; == &quot;perf-test3-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test8-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test9-alpha&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${orgid}&quot; == &quot;perf-test4-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test5-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test6-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test10-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test11-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test12-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test13-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test14-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test15-alpha&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Medium.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${orgid}&quot; == &quot;perf-test7-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test16-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test17-alpha&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_High.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the rules of a particular user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_rules_of_particular_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Setting up the user" enabled="true">
            <stringProp name="IncludeController.includepath">setup_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                <stringProp name="IncludeController.includepath">Get_product_by_product_code_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                <stringProp name="TestPlan.comments">hard coded value is added as the setup user is async so to avoid the failure</stringProp>
                <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_low_1009.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
                <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                <stringProp name="IncludeController.includepath">Get_product_by_product_code_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                <stringProp name="TestPlan.comments">hard coded value is added as the setup user is async so to avoid the failure</stringProp>
                <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_low_1009.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
                <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H1&quot; || &quot;${category_type}&quot; == &quot;H2&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                <stringProp name="IncludeController.includepath">Get_product_by_product_code_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                <stringProp name="TestPlan.comments">hard coded value is added as the setup user is async so to avoid the failure</stringProp>
                <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_low_1009.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
                <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Get org entitlements" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
                <stringProp name="IfController.condition">&quot;${orgid}&quot; == &quot;perf-test3-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test8-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test9-alpha&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
                <stringProp name="IfController.condition">&quot;${orgid}&quot; == &quot;perf-test4-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test5-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test6-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test10-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test11-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test12-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test13-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test14-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test15-alpha&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Medium.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
                <stringProp name="IfController.condition">&quot;${orgid}&quot; == &quot;perf-test7-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test16-alpha&quot; || &quot;${orgid}&quot; == &quot;perf-test17-alpha&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_High.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular document of a folder" enabled="true">
            <stringProp name="IncludeController.includepath">Get_a_particular_document_of_a_folder_hideTOCOnLaunch.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements (settings-updated)" enabled="true">
            <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_institutional.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1010: Student works/studies  on the learning path  (self-paced)" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1010.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="category" elementType="Argument">
                <stringProp name="Argument.name">category</stringProp>
                <stringProp name="Argument.value">L1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productfolderid" elementType="Argument">
                <stringProp name="Argument.name">productfolderid</stringProp>
                <stringProp name="Argument.value">product-state/perf-test1-alpha/perf_alpha_pw1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_Private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1008: Student accesses the learning path of a product (self-paced or private learning)" enabled="true">
            <stringProp name="IncludeController.includepath">1008-Student_accesses_the_learning_path_of_a_product_self-paced.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">m2pe</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">6</stringProp>
            <stringProp name="ForeachController.endIndex">9</stringProp>
          </ForeachController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${learning_progress}</stringProp>
            </LoopController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">p_cat2.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames">task,verb</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">true</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.thread</stringProp>
              </CSVDataSet>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_private.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${userstate_1010}</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner product level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product) with item code (My Private Learning)" enabled="true">
              <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_student_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete documents of a folder" enabled="true">
              <stringProp name="IncludeController.includepath">Delete_documents_of_a_folder_student_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="LTI GW - Litmus" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">2</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>7.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LTI GW" enabled="true"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="itemcode" elementType="Argument">
                  <stringProp name="Argument.name">itemcode</stringProp>
                  <stringProp name="Argument.value">1631184898880/1631184945407</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="itemcodeEncoded" elementType="Argument">
                  <stringProp name="Argument.name">itemcodeEncoded</stringProp>
                  <stringProp name="Argument.value">1631184898880%2F1631184945407</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">1038nps_1_lti.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">extuserid,cc,category,pe_category,pe_end_index,attempt_end_index,category_type</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
              <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_1011.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
              <stringProp name="TestPlan.comments">1038</stringProp>
              <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create an attempt in competency test" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_attempt_competency_test.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements" enabled="true">
              <stringProp name="TestPlan.comments">1037</stringProp>
              <stringProp name="IncludeController.includepath">Add_statements_1148_Launched.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LTI APIs: Launch a Test" enabled="true"/>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Invoke Launch Endpoint" enabled="true">
                <stringProp name="IncludeController.includepath">invoke_updated.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Invoke Launch Endpoint" enabled="true">
                <stringProp name="IncludeController.includepath">invoke_updated.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="OIDC Launch Endpoint" enabled="true">
                <stringProp name="IncludeController.includepath">oidc_updated.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="OIDC Launch Endpoint" enabled="true">
                <stringProp name="IncludeController.includepath">oidc_updated.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Keyset Launch Endpoint" enabled="true">
                <stringProp name="IncludeController.includepath">keyset.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Keyset Launch Endpoint" enabled="true">
                <stringProp name="IncludeController.includepath">keyset.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Assignment" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                <stringProp name="RandomTimer.range">${minWait}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Assignment" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">2500</stringProp>
                <stringProp name="RandomTimer.range">500</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LTI APIs: Submit a Test" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Generate Oauth Token" enabled="true">
                <stringProp name="IfController.condition">((${__time} - ${currentTime}) &gt; 1800000) &amp;&amp; (&quot;${isReset}&quot; == &quot;False&quot;)</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Generate Oauth Token" enabled="true">
                  <stringProp name="IncludeController.includepath">token.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">vars.put(&quot;isReset&quot;, &quot;True&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler  - Token" enabled="false">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Generate Oauth Token" enabled="false">
                <stringProp name="IncludeController.includepath">token.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Time Conversion from IST to UTC" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import java.time.*;
import java.time.format.*;

String UTCDateTime  = LocalDateTime.now(ZoneId.of(&quot;UTC-1&quot;)).toString();
vars.put(&apos;timestamp&apos;, UTCDateTime);
</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Oauth Launch Endpoint" enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Wait Time for Metrica" enabled="true">
                  <stringProp name="ConstantTimer.delay">${MetricaWaitTime}</stringProp>
                  <stringProp name="RandomTimer.range">0</stringProp>
                </UniformRandomTimer>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Oauth" enabled="true">
                  <stringProp name="IncludeController.includepath">oauth.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Full Scores Launch Endpoint" enabled="true">
                <stringProp name="IncludeController.includepath">scores_updated.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Returns Launch Endpoint" enabled="true">
                <stringProp name="IncludeController.includepath">return.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements - submitted External" enabled="true">
              <stringProp name="IncludeController.includepath">Add_new_external_statements_1148.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements" enabled="true">
              <stringProp name="TestPlan.comments">1037</stringProp>
              <stringProp name="IncludeController.includepath">Add_statements_1148_Closed.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a list of all attempts for an LO" enabled="true">
              <stringProp name="IncludeController.includepath">Get_list_of_all_attempts_for_an_LO_with_cursor.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get meta record of user activity" enabled="true">
              <stringProp name="IncludeController.includepath">Get_meta_record_of_user_activity.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="End an attempt in competency test" enabled="true">
              <stringProp name="IncludeController.includepath">end_an_attempt_competency_test.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1011_SE: Student works/studies  on the learning path  (teacher-led) &amp; views their grades and scores" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>12.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1011_SE.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,category,category_type,orgid,productcode</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="TestPlan.comments">1003</stringProp>
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_1011_SE.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class_1011_SE.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="false">
            <stringProp name="TestPlan.comments">1090</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get gradebooks metadata of a class" enabled="true">
            <stringProp name="TestPlan.comments">1090</stringProp>
            <stringProp name="IncludeController.includepath">Get_gradebooks_metadata_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get columns of gradebook of a class" enabled="true">
            <stringProp name="TestPlan.comments">1090</stringProp>
            <stringProp name="IncludeController.includepath">Get_columns_of_gradebook_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1090</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="TestPlan.comments">1090</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
            <stringProp name="TestPlan.comments">1090</stringProp>
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Definition" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                <stringProp name="IncludeController.includepath">Get_product_by_product_code_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get cross-product-aggregation record for a class" enabled="true">
                <stringProp name="TestPlan.comments">SuperP - Added</stringProp>
                <stringProp name="IncludeController.includepath">Get_cross_product_aggregation_record_of_a_class_for_a_user_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                <stringProp name="IncludeController.includepath">Get_product_by_product_code_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get cross-product-aggregation record for a class" enabled="true">
                <stringProp name="TestPlan.comments">SuperP - Added</stringProp>
                <stringProp name="IncludeController.includepath">Get_cross_product_aggregation_record_of_a_class_for_a_user_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H1&quot; || &quot;${category_type}&quot; == &quot;H2&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                <stringProp name="IncludeController.includepath">Get_product_by_product_code_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get cross-product-aggregation record for a class" enabled="true">
                <stringProp name="TestPlan.comments">SuperP - Added</stringProp>
                <stringProp name="IncludeController.includepath">Get_cross_product_aggregation_record_of_a_class_for_a_user_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the custom component analytics of each user for each item in a class" enabled="true">
            <stringProp name="TestPlan.comments">1090</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_customcomponent_analytics_of_each_user_for_each_item_in_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get submissions of user on an item of custom component" enabled="true">
            <stringProp name="TestPlan.comments">1090</stringProp>
            <stringProp name="IncludeController.includepath">Get_submissions_of_user_on_an_item_of_custom_component.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">48</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">p_cat1.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${userstate_1011}</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
              <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1011.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1012: Student works/studies on productive skills" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>9.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1012.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,cc,category,pe_category,attempt_end_index,category_type</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Definition" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${attempt_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learning_progress}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">product_sections_pskills_e1_4items_cat1.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${userstate_1012}</stringProp>
                </LoopController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_pskill.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
                    <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1012.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${attempt_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learning_progress}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">product_sections_pskills_e1_4items_cat1.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${userstate_1012}</stringProp>
                </LoopController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_pskill.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
                    <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1012.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${attempt_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learning_progress}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">product_sections_pskills_e1_4items_cat1.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${userstate_1012}</stringProp>
                </LoopController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_pskill.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
                    <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1012.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1038: Student views/attempts an assignment-pskill" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>9.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1038ps.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,cc,category,pe_category,attempt_end_index,category_type</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get global entitlements of a user" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Get assigned path" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
            <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the rules of a particular user" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_rules_of_particular_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular document of a folder" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_a_particular_document_of_a_folder_hideTOCOnLaunch.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">1</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements" enabled="true">
              <stringProp name="TestPlan.comments">1037</stringProp>
              <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
              <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1011.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="TestPlan.comments">1038</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Definition" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_low_withassignedpathid.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_med_withassignedpathid.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_high_withassignedpathid.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1038</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Assignment" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Definition" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${attempt_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${assignmentlearningprogress}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">assignment_pskills_e1_low.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_assignedpaths}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_assignedpaths}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${userstate_1038ps}</stringProp>
                </LoopController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_pskill.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
                    <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1012.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${attempt_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${assignmentlearningprogress}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">assignment_pskills_e1_low.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_assignedpaths}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_assignedpaths}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${userstate_1038ps}</stringProp>
                </LoopController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_pskill.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
                    <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1012.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${attempt_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${assignmentlearningprogress}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">assignment_pskills_e1_low.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_assignedpaths}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_assignedpaths}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${userstate_1038ps}</stringProp>
                </LoopController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_pskill.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                    <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
                    <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1012.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1038_1: Student views/attempts an assignment-non-pskill" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>25.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="itemcode" elementType="Argument">
                <stringProp name="Argument.name">itemcode</stringProp>
                <stringProp name="Argument.value">1631184898880/1631184945407</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcodeEncoded" elementType="Argument">
                <stringProp name="Argument.name">itemcodeEncoded</stringProp>
                <stringProp name="Argument.value">1631184898880%2F1631184945407</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1038nps_1.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,cc,category,pe_category,pe_end_index,attempt_end_index,category_type</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_1011.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get global entitlements of a user" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Definition" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_progress_true_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Org-Product Entitlement(s) of an org" enabled="true">
            <stringProp name="IncludeController.includepath">Get_org_product_entitlements_of_an_org_Low.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the rules of a particular user" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_rules_of_particular_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular document of a folder" enabled="true">
            <stringProp name="TestPlan.comments">1037</stringProp>
            <stringProp name="IncludeController.includepath">Get_a_particular_document_of_a_folder_hideTOCOnLaunch.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">1</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements" enabled="true">
              <stringProp name="TestPlan.comments">1037</stringProp>
              <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
              <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1011.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Definition" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_low_withassignedpathid.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_med_withassignedpathid.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_high_withassignedpathid.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="TestPlan.comments">1038</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1038</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Assignment" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${attempt_end_index}</stringProp>
          </ForeachController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${assignmentlearningprogressscorable}</stringProp>
            </LoopController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">assignment_itemcode_low.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames">task,verb</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.thread</stringProp>
              </CSVDataSet>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_min_1038nps}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max_1038nps}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_min_1038nps}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max_1038nps}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${userstate_1038nps}</stringProp>
            </LoopController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
                <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
                <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_1011.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1041: Existing Student joins space by invitation" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1041.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classcode,classid,invitation_id,e,category,pe_category,pe_end_index,category_type</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Single invitation of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_single_invitation_of_a_particular_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class_code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Single invitation of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_single_invitation_of_a_particular_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class_code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Distribution" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product details using ISBN" enabled="true">
            <stringProp name="IncludeController.includepath">Get_product_details_by_isbn_evolvel1.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular Bundle" enabled="true">
            <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API to grant authkey on refid" enabled="true">
            <stringProp name="IncludeController.includepath">API_to_grant_authkey_on_refid.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for joining class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get access token of existing student" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_unique.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Complete invitations of user" enabled="true">
            <stringProp name="IncludeController.includepath">complete_invitation_of_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Invitations By Email" enabled="true">
            <stringProp name="IncludeController.includepath">Get_invitation_by_email.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Single invitation of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_single_invitation_of_a_particular_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Distribution" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class_code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Distribution" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
                  <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Entitle user with product code" enabled="true">
            <stringProp name="TestPlan.comments">
</stringProp>
          </GenericController>
          <hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">cat2pe</stringProp>
              <stringProp name="ForeachController.returnVal">productcode</stringProp>
              <boolProp name="ForeachController.useSeparator">false</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">2</stringProp>
            </ForeachController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
                <stringProp name="IncludeController.includepath">Entitle_User_With_Product_Code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1042: NEW Student joins space by invitation" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1042.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classcode,classid,invitation_id,e,category,category_type</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Single invitation of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_single_invitation_of_a_particular_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_no_spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Invitation by Email" enabled="true">
            <stringProp name="IncludeController.includepath">Get_invitation_by_email.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class_code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Single invitation of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_single_invitation_of_a_particular_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class_code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API to grant authkey on refid" enabled="true">
            <stringProp name="IncludeController.includepath">API_to_grant_authkey_on_refid.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create student spaces (Register only) using product code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code_private_invitation.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Product Activation" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
              <stringProp name="RandomTimer.range">${asyncWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_Spaces_with_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Distribution" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_noExtractors.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Product Activation" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${invitationwait}</stringProp>
              <stringProp name="RandomTimer.range">${invitationwait1}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get access token of new student" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution_unique.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Complete invitations of user" enabled="true">
            <stringProp name="IncludeController.includepath">complete_invitation_of_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Invitation by Email" enabled="true">
            <stringProp name="IncludeController.includepath">Get_invitation_by_email.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Single invitation of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_single_invitation_of_a_particular_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Distribution" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get enrolments of users in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_enrollments_of_users_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate class_code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user_no_entitlement.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Distribution" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get assigned paths of a user in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Get_list_of_assignments_assigned_to_a_learner_in_class_high.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Entitle user with product code" enabled="true">
            <stringProp name="TestPlan.comments">
</stringProp>
          </GenericController>
          <hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">cat2pe</stringProp>
              <stringProp name="ForeachController.returnVal">productcode</stringProp>
              <boolProp name="ForeachController.useSeparator">false</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">2</stringProp>
            </ForeachController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
                <stringProp name="IncludeController.includepath">Entitle_User_With_Product_Code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1050: Student activates collaborative product" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1050.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_Private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_product_by_product_code_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular Bundle" enabled="true">
            <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
            <stringProp name="IncludeController.includepath">Entitle_User_With_Product_Code_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Product Entitlement" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
              <stringProp name="RandomTimer.range">${asyncWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user_noClasses.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product Items and their Progress Analytics (default)" enabled="true">
            <stringProp name="TestPlan.comments">there could be a delay due to queue buildup</stringProp>
            <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_private_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1055: Student can attempt and submit group ps activities" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1055ps.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">a,b,extuserid,groupid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="category" elementType="Argument">
                <stringProp name="Argument.name">category</stringProp>
                <stringProp name="Argument.value">L1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiproduct2" elementType="Argument">
                <stringProp name="Argument.name">multiproduct2</stringProp>
                <stringProp name="Argument.value">perf_alpha_pw1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productfolderid" elementType="Argument">
                <stringProp name="Argument.name">productfolderid</stringProp>
                <stringProp name="Argument.value">product-state/perf-test1-alpha/perf_alpha_pw1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Group Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get group Record of a class" enabled="true">
            <stringProp name="TestPlan.comments">	</stringProp>
            <stringProp name="IncludeController.includepath">Get_group_record_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the memberships of the specific group" enabled="true">
            <stringProp name="TestPlan.comments">	</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_memberships_of_a_specific_group_1055.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${group_learning_progressps}</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">p_group.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">grouptask,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add Group pskill statements" enabled="true">
              <stringProp name="IncludeController.includepath">Add_group_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${userstate_1055ps}</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner product level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
              <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1055: Student can attempt and submit group collab activities" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1055nps.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">a,b,extuserid,groupid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="category" elementType="Argument">
                <stringProp name="Argument.name">category</stringProp>
                <stringProp name="Argument.value">L1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiproduct2" elementType="Argument">
                <stringProp name="Argument.name">multiproduct2</stringProp>
                <stringProp name="Argument.value">perf_alpha_pw1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productfolderid" elementType="Argument">
                <stringProp name="Argument.name">productfolderid</stringProp>
                <stringProp name="Argument.value">product-state/perf-test1-alpha/perf_alpha_pw1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Group Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get group Record of a class" enabled="true">
            <stringProp name="TestPlan.comments">	</stringProp>
            <stringProp name="IncludeController.includepath">Get_group_record_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the memberships of the specific group" enabled="true">
            <stringProp name="TestPlan.comments">	</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_memberships_of_a_specific_group_1055.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${group_learning_progress}</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">p_group_collab.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">collabtask,collabverb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add Group collab statements" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_collab.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="user state loop controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${userstate_1055nps}</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner product level scorable" enabled="true">
              <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
              <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get getstream credentials" enabled="true">
            <stringProp name="TestPlan.comments">	</stringProp>
            <stringProp name="IncludeController.includepath">Get_getstream_credentials.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get getstream credentials" enabled="true">
            <stringProp name="TestPlan.comments">	</stringProp>
            <stringProp name="IncludeController.includepath">Get_getstream_credentials.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1069: Class student launches an ebook and do page navigation" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1069.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,count,page</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1003 : Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_ebook.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_product_by_product_code_ebook.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular bundle" enabled="true">
            <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle_ebook.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get global entitlements of user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user_ebook.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the user spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
            <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_readscenario.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all notes of a product" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_documents_of_a_folder.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
            <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_lastVisitedPage.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on ebook launch" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">15</stringProp>
              <stringProp name="CounterConfig.end">19</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">pageNum_read</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
              <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_readscenario.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${count}==1</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${pageNavigationLoopCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${page}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">pageNum</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
                <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_no_assertion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddNotesLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add notes" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_notes_statements_250chr.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddDrawingLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add drawing" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_statements_drawing_20kB.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${count}==2</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${pageNavigationLoopCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${page}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">pageNum</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
                <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_no_assertion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddNotesLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add notes" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_notes_statements_250chr.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddDrawingLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add drawing" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_statements_drawing_20kB.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${count}==3</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${pageNavigationLoopCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${page}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">pageNum</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
                <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_no_assertion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddNotesLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add notes" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_notes_statements_250chr.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddDrawingLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add drawing" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_statements_drawing_20kB.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${count}==4</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${pageNavigationLoopCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${page}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">pageNum</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
                <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_no_assertion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddNotesLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add notes" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_notes_statements_250chr.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddDrawingLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add drawing" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_statements_drawing_20kB.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all notes of a product" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_documents_of_a_folder.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1018: Teacher creates a new class in a particular institution" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>3.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
          <stringProp name="TestPlan.comments">1018</stringProp>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1018.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classname,classcode,classidtodelete</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard_1018.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API to grant authkey on refid" enabled="true">
            <stringProp name="IncludeController.includepath">API_to_grant_authkey_on_refid.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on class creation" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="TestPlan.comments">Disabled because this cannot be sent for the same class that is being created as the class creation request might be in queue when this request is sent.</stringProp>
            <stringProp name="IncludeController.includepath">associate_a_product_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
            <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the rules" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_rules_1018.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get gradeformats of an org" enabled="true">
            <stringProp name="IncludeController.includepath">Get_grade_formats_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a gradeformat with a class" enabled="true">
            <stringProp name="IncludeController.includepath">Associate_a_grade_format_with_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update details of a class" enabled="true">
            <stringProp name="IncludeController.includepath">update_details_of_class_class_soft_deletion.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1021: Teacher changes materials (product) associated with class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
          <stringProp name="TestPlan.comments">1019,1021,1097,1098</stringProp>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1021.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,b,c,category,category_type</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="TestPlan.comments">1019</stringProp>
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1025 - Teacher can review class progress" enabled="true">
            <stringProp name="TestPlan.comments">1021</stringProp>
            <stringProp name="IncludeController.includepath">1025-Teacher_can_review_class_progress.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API to grant authkey" enabled="true">
            <stringProp name="TestPlan.comments">1019</stringProp>
            <stringProp name="IncludeController.includepath">API_to_grant_authkey_orgid.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Associate a product" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a bundle with a class" enabled="true">
                <stringProp name="IncludeController.includepath">associate_a_product_with_a_class_perfbundle33.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a bundle with a class" enabled="true">
                <stringProp name="IncludeController.includepath">associate_a_product_with_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a bundle with a class" enabled="true">
                <stringProp name="IncludeController.includepath">associate_a_product_with_a_class_perfbundle39.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Multiple calls" enabled="true">
            <stringProp name="TestPlan.comments">1019,1021</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L1" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L1&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1019</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l1pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L2" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L2&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l2pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L3" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L3&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l3pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">4</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L4" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L4&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l4pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">4</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L5" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L5&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l5pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">4</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle29.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L6" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L6&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l6pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">2</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L7" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L7&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l7pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L8" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L8&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l8pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">2</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - L9" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L9&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">l9pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle30.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - M1" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;M1&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">m1pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">6</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - M2" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;M2&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">m2pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">6</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - M3" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;M3&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle33.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">m3pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">3</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle33.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle33.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - M4" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;M4&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">m4pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">6</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle32.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - M5" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;M5&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">m5pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">2</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle1.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - H1" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H1&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle35.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">h1pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">2</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle35.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle35.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - H2" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H2&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle36.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">h2pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">4</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle36.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle36.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - H3" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H3&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class for category 1" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_perfbundle35.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_classes.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller - Unassociate a product" enabled="true">
                <stringProp name="ForeachController.inputVal">h3pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">2</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Unassociate_a_product_from_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for class product unassociation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete one or more columns from gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Delete_one_or_more_columns_from_gradebook_of_a_class_perfbundle35.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update multiple columns of gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Update_multiple_columns_of_a_gradebook_of_a_class_perfbundle35.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1097</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeFilter.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_addBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
                <stringProp name="TestPlan.comments">1098</stringProp>
                <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_removeBookmark.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1024: Teacher changes/edits date &amp; metadata of the class and enrolls and removes other teachers from the class" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>2.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
          <stringProp name="TestPlan.comments">1020,1022,1023,1024</stringProp>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1661945778000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1671945778000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 1020 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1024.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,b,c,category,pe_category ,pe_end_index2,category_type</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="TestPlan.comments">1018</stringProp>
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1025 - Teacher can review class progress" enabled="true">
            <stringProp name="TestPlan.comments">1020,1024</stringProp>
            <stringProp name="IncludeController.includepath">1025-Teacher_can_review_class_progress.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - 1023" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index2}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_users_in_a_class_aggregrated_over_all_the_items_materials_product_in_that_class_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class Pending Submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics for items (product) in a class, aggregrated over all students in that class." enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_items_product_in_a_class_aggregrated_over_all_students_in_that_class_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index2}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_users_in_a_class_aggregrated_over_all_the_items_materials_product_in_that_class_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class Pending Submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics for items (product) in a class, aggregrated over all students in that class." enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_items_product_in_a_class_aggregrated_over_all_students_in_that_class_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index2}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_users_in_a_class_aggregrated_over_all_the_items_materials_product_in_that_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class Pending Submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics for items (product) in a class, aggregrated over all students in that class." enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_items_product_in_a_class_aggregrated_over_all_students_in_that_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
            <stringProp name="TestPlan.comments">1023</stringProp>
            <stringProp name="IncludeController.includepath">Get_members_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all users in an Organization with role - Teacher" enabled="true">
            <stringProp name="TestPlan.comments">1023</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_users_in_org_with_role_teacher.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all users in an Organization with role - Admin" enabled="true">
            <stringProp name="TestPlan.comments">1023</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_users_in_org_with_role_admin.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Details For a Specific Class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on update class details" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Generate Class Code" enabled="true">
            <stringProp name="TestPlan.comments">1022</stringProp>
            <stringProp name="IncludeController.includepath">generate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update details of class" enabled="true">
            <stringProp name="TestPlan.comments">1020</stringProp>
            <stringProp name="IncludeController.includepath">update_details_of_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time before enrollment users" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll multiple users into a class" enabled="true">
            <stringProp name="TestPlan.comments">1023</stringProp>
            <stringProp name="IncludeController.includepath">enroll_multiple_users_into_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time before unenrollment users" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unenroll multiple users into a class" enabled="true">
            <stringProp name="TestPlan.comments">1024</stringProp>
            <stringProp name="IncludeController.includepath">unenroll_multiple_users_into_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1026: Teacher can review class progress - one students in that class" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>2.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
          <stringProp name="TestPlan.comments">1026</stringProp>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1026.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,b,c,category,pe_category,pe_end_index,category_type</stringProp>
          </CSVDataSet>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1025 - Teacher can review class progress" enabled="true">
            <stringProp name="IncludeController.includepath">1025-Teacher_can_review_class_progress_1027.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Category Definition" enabled="true">
            <stringProp name="TestPlan.comments">1009</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                  <stringProp name="TestPlan.comments">1025</stringProp>
                  <stringProp name="IncludeController.includepath">Get_product_by_product_code_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                  <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_low_1026.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                  <stringProp name="TestPlan.comments">1025</stringProp>
                  <stringProp name="IncludeController.includepath">Get_product_by_product_code_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                  <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_med_1026.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${pe_end_index}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                  <stringProp name="TestPlan.comments">1025</stringProp>
                  <stringProp name="IncludeController.includepath">Get_product_by_product_code_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                  <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_high_1026.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information for a specific user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Global Entitlements of a user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user_by_teacher.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get submissions of user on an item of custom component" enabled="true">
            <stringProp name="IncludeController.includepath">Get_submissions_of_user_on_an_item_of_custom_component.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1028: Teacher can draft/save/submit feedback on productive skills" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>2.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1028.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,b,c,category,pe_category,category_type</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Details For a Specific Class" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get columns of gradebook of a class" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_columns_of_gradebook_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the custom component analytics of each user for each item in a class" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_customcomponent_analytics_of_each_user_for_each_item_in_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_members_of_a_class_teacher.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get submissions of user on an item of custom component" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_submissions_of_user_on_an_item_of_custom_component.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - GetClassRecord,GetCrossProdAgg" enabled="true">
            <stringProp name="TestPlan.comments">SuperP change</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all assigned paths of a class" enabled="true">
                <stringProp name="TestPlan.comments">1039</stringProp>
                <stringProp name="IncludeController.includepath">Get_all_assigned_paths_of_a_class_Low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get class record" enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_each_item_over_each_student_in_a_class_with_or_without_hierarchy_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get cross product aggregation record of a class" enabled="true">
                  <stringProp name="TestPlan.comments">SuperP change</stringProp>
                  <stringProp name="IncludeController.includepath">Get_cross_product_aggregation_record_of_a_class_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class pending submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_1027_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all assigned paths of a class" enabled="true">
                <stringProp name="TestPlan.comments">1039</stringProp>
                <stringProp name="IncludeController.includepath">Get_all_assigned_paths_of_a_class_Med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get class record" enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_each_item_over_each_student_in_a_class_with_or_without_hierarchy_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get cross product aggregation record of a class" enabled="true">
                  <stringProp name="TestPlan.comments">SuperP change</stringProp>
                  <stringProp name="IncludeController.includepath">Get_cross_product_aggregation_record_of_a_class_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class pending submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_1027_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all assigned paths of a class" enabled="true">
                <stringProp name="TestPlan.comments">1039</stringProp>
                <stringProp name="IncludeController.includepath">Get_all_assigned_paths_of_a_class_High.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get class record" enabled="true">
                  <stringProp name="IncludeController.includepath">Analytics_for_each_item_over_each_student_in_a_class_with_or_without_hierarchy_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get cross product aggregation record of a class" enabled="true">
                  <stringProp name="TestPlan.comments">SuperP change</stringProp>
                  <stringProp name="IncludeController.includepath">Get_cross_product_aggregation_record_of_a_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class pending submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_1027_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${studentuserid1}&quot; != &quot;NO_PENDING REQUESTS1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <stringProp name="TestPlan.comments">1028</stringProp>
          </IfController>
          <hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time before evaluating submitted submission of a user" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                <stringProp name="RandomTimer.range">${minWait}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Teacher mark Activities" enabled="true">
              <stringProp name="TestPlan.comments">1009</stringProp>
            </GenericController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
                <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                  <stringProp name="ForeachController.returnVal">productcode</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">0</stringProp>
                  <stringProp name="ForeachController.endIndex">1</stringProp>
                </ForeachController>
                <hashTree>
                  <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                    <stringProp name="ForeachController.inputVal">studentuserid</stringProp>
                    <stringProp name="ForeachController.returnVal">studentuserid1</stringProp>
                    <boolProp name="ForeachController.useSeparator">false</boolProp>
                    <stringProp name="ForeachController.startIndex">0</stringProp>
                    <stringProp name="ForeachController.endIndex">4</stringProp>
                  </ForeachController>
                  <hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information of a specific user" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                      <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_low.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_product_by_product_code_low.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Create_documents_of_a_folder_1028.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get particular document of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update documents of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Update_documents_of_folders_1028.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">4</stringProp>
                  </LoopController>
                  <hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end">4</stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counter</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Draft Evaluated" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_draft_evaluated_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Evaluated" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_evaluated_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enable Re-submission for student - REDO statement" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_redo_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
                <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                  <stringProp name="ForeachController.returnVal">productcode</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">0</stringProp>
                  <stringProp name="ForeachController.endIndex">1</stringProp>
                </ForeachController>
                <hashTree>
                  <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                    <stringProp name="ForeachController.inputVal">studentuserid</stringProp>
                    <stringProp name="ForeachController.returnVal">studentuserid1</stringProp>
                    <boolProp name="ForeachController.useSeparator">false</boolProp>
                    <stringProp name="ForeachController.startIndex">0</stringProp>
                    <stringProp name="ForeachController.endIndex">4</stringProp>
                  </ForeachController>
                  <hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information of a specific user" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                      <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_med.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_product_by_product_code_med.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Create_documents_of_a_folder_1028.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update documents of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Update_documents_of_folders_1028.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get particular document of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">4</stringProp>
                  </LoopController>
                  <hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end">4</stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counter</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Draft Evaluated" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_draft_evaluated_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Evaluated" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_evaluated_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enable Re-submission for student - REDO statement" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_redo_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
                <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                  <stringProp name="ForeachController.returnVal">productcode</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">0</stringProp>
                  <stringProp name="ForeachController.endIndex">1</stringProp>
                </ForeachController>
                <hashTree>
                  <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                    <stringProp name="ForeachController.inputVal">studentuserid</stringProp>
                    <stringProp name="ForeachController.returnVal">studentuserid1</stringProp>
                    <boolProp name="ForeachController.useSeparator">false</boolProp>
                    <stringProp name="ForeachController.startIndex">0</stringProp>
                    <stringProp name="ForeachController.endIndex">4</stringProp>
                  </ForeachController>
                  <hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information of a specific user" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                      <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_high.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_product_by_product_code_high.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Create_documents_of_a_folder_1028.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update documents of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Update_documents_of_folders_1028.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get particular document of a folder" enabled="true">
                      <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">4</stringProp>
                  </LoopController>
                  <hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end">4</stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counter</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Draft Evaluated" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_draft_evaluated_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Evaluated" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_evaluated_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enable Re-submission for student - REDO statement" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements_pskill_redo_contributesToCompletion.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1040: Teacher views Class Assignments Aggregations" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>4.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
          <stringProp name="TestPlan.comments">1100 - Rules scenario merged</stringProp>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1040.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,b,c,category,pe_category,category_type,d,assignment_category,cursor_value</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
            <stringProp name="TestPlan.comments">1039</stringProp>
            <stringProp name="IncludeController.includepath">Get_product_by_product_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get global entitlements of a user" enabled="true">
            <stringProp name="TestPlan.comments">1039</stringProp>
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user_no_entitlement.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1039</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="TestPlan.comments">1039</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Get all assigned paths" enabled="true">
            <stringProp name="TestPlan.comments">1039,1040</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${assignment_category}&quot; == &quot;A_Low&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all assigned paths of a class" enabled="true">
                <stringProp name="TestPlan.comments">1039</stringProp>
                <stringProp name="IncludeController.includepath">Get_all_assigned_paths_of_a_class_Low.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${assigned_path_class_count}</stringProp>
              </LoopController>
              <hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end">${assigned_path_class_count}</stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterValue</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get class level aggregations for all items in a assigned-path" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_class_level_aggregations_for_all_items_in_a_assigned_path_1040_Low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${assignment_category}&quot; == &quot;A_Med&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all assigned paths of a class" enabled="true">
                <stringProp name="TestPlan.comments">1039</stringProp>
                <stringProp name="IncludeController.includepath">Get_all_assigned_paths_of_a_class_Med.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${assigned_path_class_count}</stringProp>
              </LoopController>
              <hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end">${assigned_path_class_count}</stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterValue</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get class level aggregations for all items in a assigned-path" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_class_level_aggregations_for_all_items_in_a_assigned_path_1040_Med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${assignment_category}&quot; == &quot;A_High&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all assigned paths of a class" enabled="true">
                <stringProp name="TestPlan.comments">1039</stringProp>
                <stringProp name="IncludeController.includepath">Get_all_assigned_paths_of_a_class_High.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${assigned_path_class_count}</stringProp>
              </LoopController>
              <hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end">${assigned_path_class_count}</stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterValue</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get class level aggregations for all items in a assigned-path" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_class_level_aggregations_for_all_items_in_a_assigned_path_1040_High.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${cursor_value}&quot; == &quot;High_Cursor&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all assigned paths of a class" enabled="true">
                  <stringProp name="TestPlan.comments">1039</stringProp>
                  <stringProp name="IncludeController.includepath">Get_all_assigned_paths_of_a_class_High_With_Cursor.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
                <stringProp name="IfController.condition">&quot;${cursor_value}&quot; == &quot;Med_Cursor&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all assigned paths of a class" enabled="true">
                  <stringProp name="TestPlan.comments">1039</stringProp>
                  <stringProp name="IncludeController.includepath">Get_all_assigned_paths_of_a_class_Med_With_Cursor.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time before evaluating submitted submission of a user" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
            <stringProp name="TestPlan.comments">1039</stringProp>
            <stringProp name="IncludeController.includepath">Get_members_of_a_class_teacher_extractAllextuserids.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Class pending submission" enabled="true">
            <stringProp name="TestPlan.comments">Extra call for getting userids of pending submissions in a class</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class pending submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_1027_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create an assigned path in a class" enabled="true">
                  <stringProp name="TestPlan.comments">1039</stringProp>
                  <stringProp name="IncludeController.includepath">Create_an_assigned_path_in_a_class_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname=" Enroll one or multiple users with particular Assigned Path" enabled="true">
                  <stringProp name="IncludeController.includepath">Enroll_one_or_multiple_users_with_an_assigned_path_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update an assigned path in a class" enabled="true">
                  <stringProp name="TestPlan.comments">1039</stringProp>
                  <stringProp name="IncludeController.includepath">Update_an_assigned_path_in_a_class_low.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class pending submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_1027_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create an assigned path in a class" enabled="true">
                  <stringProp name="TestPlan.comments">1039</stringProp>
                  <stringProp name="IncludeController.includepath">Create_an_assigned_path_in_a_class_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname=" Enroll one or multiple users with particular Assigned Path" enabled="true">
                  <stringProp name="IncludeController.includepath">Enroll_one_or_multiple_users_with_an_assigned_path_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update an assigned path in a class" enabled="true">
                  <stringProp name="TestPlan.comments">1039</stringProp>
                  <stringProp name="IncludeController.includepath">Update_an_assigned_path_in_a_class_med.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
              <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot; &amp;&amp; &quot;${category}&quot; != &quot;H4&quot; ;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class pending submissions" enabled="true">
                  <stringProp name="IncludeController.includepath">class_pending_submissions_1027_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create an assigned path in a class" enabled="true">
                  <stringProp name="TestPlan.comments">1039</stringProp>
                  <stringProp name="IncludeController.includepath">Create_an_assigned_path_in_a_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname=" Enroll one or multiple users with particular Assigned Path" enabled="true">
                  <stringProp name="IncludeController.includepath">Enroll_one_or_multiple_users_with_an_assigned_path_high_50users.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname=" Enroll one or multiple users with particular Assigned Path" enabled="true">
                  <stringProp name="IncludeController.includepath">Enroll_one_or_multiple_users_with_an_assigned_path_high_25users.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update an assigned path in a class" enabled="true">
                  <stringProp name="TestPlan.comments">1039</stringProp>
                  <stringProp name="IncludeController.includepath">Update_an_assigned_path_in_a_class_high.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Teacher submits feedback for pskill activity" enabled="true">
            <stringProp name="TestPlan.comments">1028</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${studentuserid1}&quot; != &quot;NO_PENDING REQUESTS1&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time before evaluating submitted submission of a user" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Teacher mark Activities" enabled="true">
                <stringProp name="TestPlan.comments">1009</stringProp>
              </GenericController>
              <hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Low" enabled="true">
                  <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;L&quot;;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                    <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                    <stringProp name="ForeachController.returnVal">productcode</stringProp>
                    <boolProp name="ForeachController.useSeparator">false</boolProp>
                    <stringProp name="ForeachController.startIndex">0</stringProp>
                    <stringProp name="ForeachController.endIndex">1</stringProp>
                  </ForeachController>
                  <hashTree>
                    <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                      <stringProp name="ForeachController.inputVal">studentuserid</stringProp>
                      <stringProp name="ForeachController.returnVal">studentuserid1</stringProp>
                      <boolProp name="ForeachController.useSeparator">false</boolProp>
                      <stringProp name="ForeachController.startIndex">0</stringProp>
                      <stringProp name="ForeachController.endIndex">4</stringProp>
                    </ForeachController>
                    <hashTree>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information of a specific user" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                        <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_low.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_product_by_product_code_low.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Create_documents_of_a_folder_1028.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get particular document of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update documents of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Update_documents_of_folders_1028.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                    </hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">4</stringProp>
                    </LoopController>
                    <hashTree>
                      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                        <stringProp name="CounterConfig.start">1</stringProp>
                        <stringProp name="CounterConfig.end">4</stringProp>
                        <stringProp name="CounterConfig.incr">1</stringProp>
                        <stringProp name="CounterConfig.name">counter</stringProp>
                        <stringProp name="CounterConfig.format"></stringProp>
                        <boolProp name="CounterConfig.per_user">true</boolProp>
                        <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                      </CounterConfig>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Draft Evaluated" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_draft_evaluated_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Evaluated" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_evaluated_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enable Re-submission for student - REDO statement" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_redo_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Medium" enabled="true">
                  <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;M&quot;;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                    <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                    <stringProp name="ForeachController.returnVal">productcode</stringProp>
                    <boolProp name="ForeachController.useSeparator">false</boolProp>
                    <stringProp name="ForeachController.startIndex">0</stringProp>
                    <stringProp name="ForeachController.endIndex">1</stringProp>
                  </ForeachController>
                  <hashTree>
                    <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                      <stringProp name="ForeachController.inputVal">studentuserid</stringProp>
                      <stringProp name="ForeachController.returnVal">studentuserid1</stringProp>
                      <boolProp name="ForeachController.useSeparator">false</boolProp>
                      <stringProp name="ForeachController.startIndex">0</stringProp>
                      <stringProp name="ForeachController.endIndex">4</stringProp>
                    </ForeachController>
                    <hashTree>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information of a specific user" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                        <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_med.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_product_by_product_code_med.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Create_documents_of_a_folder_1028.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update documents of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Update_documents_of_folders_1028.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get particular document of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                    </hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">4</stringProp>
                    </LoopController>
                    <hashTree>
                      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                        <stringProp name="CounterConfig.start">1</stringProp>
                        <stringProp name="CounterConfig.end">4</stringProp>
                        <stringProp name="CounterConfig.incr">1</stringProp>
                        <stringProp name="CounterConfig.name">counter</stringProp>
                        <stringProp name="CounterConfig.format"></stringProp>
                        <boolProp name="CounterConfig.per_user">true</boolProp>
                        <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                      </CounterConfig>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Draft Evaluated" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_draft_evaluated_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Evaluated" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_evaluated_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enable Re-submission for student - REDO statement" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_redo_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - High" enabled="true">
                  <stringProp name="IfController.condition">&quot;${category_type}&quot; == &quot;H&quot; &amp;&amp; &quot;${category}&quot; != &quot;H4&quot; ;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                    <stringProp name="ForeachController.inputVal">${pe_category}</stringProp>
                    <stringProp name="ForeachController.returnVal">productcode</stringProp>
                    <boolProp name="ForeachController.useSeparator">false</boolProp>
                    <stringProp name="ForeachController.startIndex">0</stringProp>
                    <stringProp name="ForeachController.endIndex">1</stringProp>
                  </ForeachController>
                  <hashTree>
                    <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                      <stringProp name="ForeachController.inputVal">studentuserid</stringProp>
                      <stringProp name="ForeachController.returnVal">studentuserid1</stringProp>
                      <boolProp name="ForeachController.useSeparator">false</boolProp>
                      <stringProp name="ForeachController.startIndex">0</stringProp>
                      <stringProp name="ForeachController.endIndex">4</stringProp>
                    </ForeachController>
                    <hashTree>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information of a specific user" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
                        <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_high.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_product_by_product_code_high.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Create_documents_of_a_folder_1028.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update documents of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Update_documents_of_folders_1028.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get particular document of a folder" enabled="true">
                        <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                    </hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">4</stringProp>
                    </LoopController>
                    <hashTree>
                      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                        <stringProp name="CounterConfig.start">1</stringProp>
                        <stringProp name="CounterConfig.end">4</stringProp>
                        <stringProp name="CounterConfig.incr">1</stringProp>
                        <stringProp name="CounterConfig.name">counter</stringProp>
                        <stringProp name="CounterConfig.format"></stringProp>
                        <boolProp name="CounterConfig.per_user">true</boolProp>
                        <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                      </CounterConfig>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Draft Evaluated" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_draft_evaluated_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - Evaluated" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_evaluated_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                      <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enable Re-submission for student - REDO statement" enabled="true">
                        <stringProp name="IncludeController.includepath">Add_statements_pskill_redo_contributesToCompletion.jmx</stringProp>
                      </IncludeController>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Get_product_by_product_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get global entitlements of a user" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user_no_entitlement.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Get_members_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the rules" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_rules.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the rules" enabled="true">
            <stringProp name="TestPlan.comments">1039</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_rules.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all groups by path" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_groups_by_path.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Create_a_rule.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular rule" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Get_a_particular_rule.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a schedule" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Create_a_schedule.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update a rule" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Update_a_rule.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update a schedule" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Update_a_schedule.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete a schedule" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Delete_a_schedule.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete a rule" enabled="true">
            <stringProp name="TestPlan.comments">1100</stringProp>
            <stringProp name="IncludeController.includepath">Delete_a_rule.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1052: Teacher can add students to the group" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1052.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,studentuserid1</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1025 - Teacher can review class progress - Group" enabled="true">
            <stringProp name="IncludeController.includepath">1025-Teacher_can_review_class_progress_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
            <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Information of specific user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll users in a group" enabled="true">
            <stringProp name="IncludeController.includepath">enroll_a_user_in_a_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1054: Teacher can mark group ps activities" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1054.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">a,groupid,extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grouptask" elementType="Argument">
                <stringProp name="Argument.name">grouptask</stringProp>
                <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiproduct2" elementType="Argument">
                <stringProp name="Argument.name">multiproduct2</stringProp>
                <stringProp name="Argument.value">perf_alpha_pw1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="folderid" elementType="Argument">
                <stringProp name="Argument.name">folderid</stringProp>
                <stringProp name="Argument.value">activity-state/perf-test1-alpha/perf_alpha_pw1/1591701928122/1591701946681/1592291282828</stringProp>
                <stringProp name="Argument.desc">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productfolderid" elementType="Argument">
                <stringProp name="Argument.name">productfolderid</stringProp>
                <stringProp name="Argument.value">product-state/perf-test1-alpha/perf_alpha_pw1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="category" elementType="Argument">
                <stringProp name="Argument.name">category</stringProp>
                <stringProp name="Argument.value">L1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all groups by path" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_groups_by_path_1054.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get columns of gradebook of a class" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_columns_of_gradebook_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get grade formats assocaited with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the custom component analytics of each user for each item in a class" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_the_customcomponent_analytics_of_each_user_for_each_item_in_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_members_of_a_class_teacher.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get submissions of user on an item of custom component" enabled="true">
            <stringProp name="TestPlan.comments">1027</stringProp>
            <stringProp name="IncludeController.includepath">Get_submissions_of_user_on_an_item_of_custom_component.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get class record Group" enabled="true">
            <stringProp name="IncludeController.includepath">Get_class_record_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get cross product aggregation record of a class" enabled="true">
            <stringProp name="TestPlan.comments">SuperP change</stringProp>
            <stringProp name="IncludeController.includepath">Get_cross_product_aggregation_record_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the memberships of a specific group" enabled="true">
            <stringProp name="TestPlan.comments">This is required to extract student user id</stringProp>
            <stringProp name="IncludeController.includepath">Get_all_memberships_of_a_specific_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)." enabled="true">
            <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get group record of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_group_record_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
            <stringProp name="TestPlan.comments">1025</stringProp>
            <stringProp name="IncludeController.includepath">Get_product_by_product_code_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner item level scorable" enabled="true">
            <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create documents of a folder for learner product level scorable" enabled="true">
            <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_product_level_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_particular_document_of_a_folder_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Deletes user&apos;s application state for a product or class (product) - By Teacher" enabled="true">
            <stringProp name="IncludeController.includepath">Delete_documents_of_folders.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Evaluate group task" enabled="true">
            <stringProp name="IncludeController.includepath">Add_statements_pskill_evaluated_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add items to showcase" enabled="true">
            <stringProp name="IncludeController.includepath">add_items_to_showcase.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Showcase of a class" enabled="true">
            <stringProp name="IncludeController.includepath">get_showcase_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get metadata of the specific group" enabled="true">
            <stringProp name="TestPlan.comments">1054, 1058, 1059</stringProp>
            <stringProp name="IncludeController.includepath">Get_metadata_of_the_specific_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1063: Teacher Launches an ebook and do page navigation" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>3.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1063.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,count,page</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="category" elementType="Argument">
                <stringProp name="Argument.name">category</stringProp>
                <stringProp name="Argument.value">L0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard_1063.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_product_by_product_code_ebook.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular bundle" enabled="true">
            <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle_ebook.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get global entitlements of user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user_no_entitlement.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the user spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
            <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_readscenario.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all notes of a product" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_documents_of_a_folder.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on ebook launch" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">15</stringProp>
              <stringProp name="CounterConfig.end">19</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">pageNum_read</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
              <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_readscenario.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statement - settings updated" enabled="true">
            <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_lastVisitedPage.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${count}==1</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${pageNavigationLoopCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${page}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">pageNum</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
                <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_no_assertion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddNotesLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add notes" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_notes_statements_250chr.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddDrawingLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add drawing" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_statements_drawing_20kB.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${count}==2</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${pageNavigationLoopCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${page}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">pageNum</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
                <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_no_assertion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddNotesLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add notes" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_notes_statements_250chr.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddDrawingLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add drawing" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_statements_drawing_20kB.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${count}==3</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${pageNavigationLoopCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${page}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">pageNum</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
                <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_no_assertion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddNotesLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add notes" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_notes_statements_250chr.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddDrawingLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add drawing" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_statements_drawing_20kB.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${count}==4</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Page Navigation" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${pageNavigationLoopCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${page}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">pageNum</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get drawings of a particular page" enabled="true">
                <stringProp name="IncludeController.includepath">Get_drawings_of_a_particular_page_no_assertion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddNotesLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add notes" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_notes_statements_250chr.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${AddDrawingLoopCount}</stringProp>
              </LoopController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-814940266">documentId</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1084943350">
                      <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add drawing" enabled="true">
                  <stringProp name="IncludeController.includepath">Add_statements_drawing_20kB.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time during page navigation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_max_assignedpaths}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all notes of a product" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_documents_of_a_folder.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1092: Admin assigning weightage to components [For Class]" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1092.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,tchextuserid,classname,classcode,category,classid,pe_category,category_type</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard_1092.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1025 - Teacher can review class progress" enabled="true">
            <stringProp name="TestPlan.comments">Added as per MVP</stringProp>
            <stringProp name="IncludeController.includepath">1025-Teacher_can_review_class_progress_1092.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all custom components" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_custom_components.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get gradeformats of an org" enabled="true">
            <stringProp name="IncludeController.includepath">Get_grade_formats_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the rules" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_rules_orgLevel.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a gradeformat with a class" enabled="true">
            <stringProp name="IncludeController.includepath">Associate_a_grade_format3_with_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">40000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate a gradeformat from a class" enabled="true">
            <stringProp name="IncludeController.includepath">Unassociate_a_gradeformat_from_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">40000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update class gradeformat association" enabled="true">
            <stringProp name="IncludeController.includepath">Update_class_gradeformat_association.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the custom component analytics of each user for each item in a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_customcomponent_analytics_of_each_user_for_each_item_in_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get global entitlements of a user" enabled="true">
            <stringProp name="TestPlan.comments">1093</stringProp>
            <stringProp name="IncludeController.includepath">Get_global_entitlements_of_a_user_no_entitlement.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get gradebooks metadata of a class" enabled="true">
            <stringProp name="TestPlan.comments">1093</stringProp>
            <stringProp name="IncludeController.includepath">Get_gradebooks_metadata_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get gardeformat associated with a particular class of an org" enabled="true">
            <stringProp name="TestPlan.comments">1093</stringProp>
            <stringProp name="IncludeController.includepath">Get_grade_formats_assocaited_with_a_particular_class_of_an_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="TestPlan.comments">1093</stringProp>
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get columns of gradebook of a class" enabled="true">
            <stringProp name="TestPlan.comments">1093</stringProp>
            <stringProp name="IncludeController.includepath">Get_columns_of_gradebook_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a custom component" enabled="true">
            <stringProp name="IncludeController.includepath">Create_a_custom_component.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="LTI GW Tool - LMS" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">2</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>4.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LTI GW Tool - Scenario 2: A teacher can launch C1 for adding the content links (DeepLinking)" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">users_BB_LTI_scenario2.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">user_id,resource_id</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Login Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">login_get_scenario2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Token Generation" enabled="true">
              <stringProp name="IncludeController.includepath">id_token_scenario2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Launch" enabled="true">
              <stringProp name="IncludeController.includepath">launch_post.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait Time for JWKS" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${JwksWaitTime}</stringProp>
                <stringProp name="RandomTimer.range">0</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="AWS Signature" enabled="true">
              <stringProp name="IncludeController.includepath">aws.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Info Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">info.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="AWS Deeplink Signature" enabled="true">
              <stringProp name="IncludeController.includepath">aws_deeplink_signature.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Deeplink Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">deeplink.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="JWKS Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">jwks1.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait Time for Teacher to add Links" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">2500</stringProp>
                <stringProp name="RandomTimer.range">500</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Login Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">login_get_scenario2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Token Generation" enabled="true">
              <stringProp name="IncludeController.includepath">id_token_scenario2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Launch" enabled="true">
              <stringProp name="IncludeController.includepath">launch_post.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait Time for JWKS" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${JwksWaitTime}</stringProp>
                <stringProp name="RandomTimer.range">0</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="AWS Signature" enabled="true">
              <stringProp name="IncludeController.includepath">aws.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Info Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">info.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LTI GB Item Sync" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">users_BB_LTI_stress_test1.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">user_id,resource_id,orgID,extuser_id,productcode,classID,unitcode</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="SendScores Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">send_scores.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
