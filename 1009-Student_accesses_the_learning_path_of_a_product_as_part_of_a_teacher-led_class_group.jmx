<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="1009: Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="1009: Student accesses the learning path of a product as part of a teacher-led class " enabled="true"/>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV- hideTOCOnLaunch-institutional" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="folderid" elementType="Argument">
              <stringProp name="Argument.name">folderid</stringProp>
              <stringProp name="Argument.value">settings/org/${orgid}/class/885beb34-0187-11eb-b541-0242ac110003/product/${multiproduct1}/prefs</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="documentid" elementType="Argument">
              <stringProp name="Argument.name">documentid</stringProp>
              <stringProp name="Argument.value">hideTOCOnLaunch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid" elementType="Argument">
              <stringProp name="Argument.name">orgid</stringProp>
              <stringProp name="Argument.value">perf-test1-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extuseridGetDocument" elementType="Argument">
              <stringProp name="Argument.name">extuseridGetDocument</stringProp>
              <stringProp name="Argument.value">std_1601296954027_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product code" enabled="true">
          <stringProp name="IncludeController.includepath">Get_product_by_product_code_group.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
          <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_group.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
          <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
          <stringProp name="IncludeController.includepath">Get_user_application_state_for_a_product_or_class_product_group.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get groups for the learner in a class in case of groups enabled product" enabled="false">
          <stringProp name="IncludeController.includepath"></stringProp>
        </IncludeController>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
          <stringProp name="IncludeController.includepath">Get_user_application_state_for_a_product_or_class_product_with_item_code_group.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
          <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_group.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
          <stringProp name="IncludeController.includepath">Add_group_statements.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements (settings-updated)" enabled="true">
          <stringProp name="IncludeController.includepath">Add_statements_settingsUpdated_institutional.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
            <stringProp name="RandomTimer.range">${minWait}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular document of a folder" enabled="true">
          <stringProp name="IncludeController.includepath">Get_a_particular_document_of_a_folder.jmx</stringProp>
        </IncludeController>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
